"ScnFindAppointment As screen.'tabletAutoLayout_HeaderMainFooter_ver1.0'":
    OnVisible: |
        =Reset(ChkTodayAppt);
        Reset(ChkTestNotReported);
        Reset([@CmbFindApptService]);
        Reset([@CmbFindApptStatus]);
        Reset([@CmbFindApptLocation]);
        Reset([@CmbFindApptTestStatus]);
        Reset(DatStartDate);
        Reset(DatEndDate);
        Reset(TxtFindApptSearch);
        Reset(GalAppointment);
        Set(
            VarExistingPatient,
            false
        );
        Set(
            VarOptionsPopUp,
            false
        );
        Set(
            VarViewAllFindAppointmentRecords,
            false
        );
        If(
            !IsBlank(VarDefaultSubServiceValue) || !IsBlank(VarDefaultSiteLocation) || !IsBlank(VarDefaultFilterAppointmentStatus) || VarDefaultfilterTodaysAppt = true,
            Set(
                VarViewAllFindAppointmentRecords,
                true
            )
        );

    BottomMenuFindAppt As BottonMenuContainer:
        ActionNeededActiveMenu: =false
        FindPatientAction: =ScnFindPatient
        FindPatientActiveMenu: =false
        HomeAction: =ScnLanding
        HomeActiveMenu: =false
        NeededAction: =ScnActionNeeded
        NewAppointmentAction: =ScnNewAppointment
        NewApptActiveMenu: =false
        Width: =Parent.Width
        Y: =Parent.Height-Self.Height

    CnvFindApptBody As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =Parent.Height-Self.Y-BottomMenuFindAppt.Height
        Width: =Parent.Width
        Y: =CnvFindApptHeader.Y+CnvFindApptHeader.Height
        ZIndex: =2

        DcFilterList As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =248
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            ConFindApptFilter As groupContainer.verticalAutoLayoutContainer:
                Height: =250
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =24
                PaddingRight: =24
                Width: =Parent.Width
                ZIndex: =2

                ConFilter1FindAppt As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    Height: =220
                    LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                    LayoutMinHeight: =0
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingTop: =19
                    Width: =Parent.Width
                    ZIndex: =1

                    LblFindApptService As htmlViewer:
                        Font: =VarTheme.Font
                        Height: =60
                        HtmlText: |-
                            ="Filter By <br><b>Service</b>:"
                        PaddingTop: =0
                        Size: =14
                        Width: =120
                        X: =40
                        Y: =35
                        ZIndex: =1

                    CmbFindApptService As combobox:
                        BorderColor: =VarTheme.InputBackground
                        BorderThickness: =0
                        ChevronBackground: =VarTheme.InputBackground
                        ChevronFill: =Color.Black
                        ChevronHoverBackground: =VarTheme.InputBackground
                        ChevronHoverFill: =Color.Black
                        DefaultSelectedItems: |-
                            =If(!IsBlank(VarDefaultSubServiceValue),
                            LookUp('Sub Services', 'Healthcare Service (msemr_healthcareserviceid)'=VarDefaultSubServiceValue))
                        DisplayFields: =["msemr_name"]
                        Fill: =VarTheme.InputBackground
                        Font: =VarTheme.Font
                        InputTextPlaceholder: ="Select Service"
                        Items: =Filter('Sub Services', Status='Status (Sub Services)'.Active && Language.Code="en")
                        OnChange: |+
                            =If(!IsBlank(CmbFindApptService.Selected.Name),
                            Set(VarViewAllFindAppointmentRecords,true));
                            
                        PaddingLeft: =12
                        PaddingRight: =0
                        SearchFields: =["msemr_name"]
                        SearchItems: =Search(Filter('Sub Services', Status='Status (Sub Services)'.Active && Language.Code="en"),CmbFindApptService.SearchText,"msemr_name")
                        SelectionColor: =Color.Black
                        SelectionFill: =RGBA(186, 202, 226, 1)
                        SelectMultiple: =false
                        Size: =14
                        Width: =210
                        Y: =10
                        ZIndex: =2

                    LblFindApptStatus As htmlViewer:
                        Font: =VarTheme.Font
                        Height: =60
                        HtmlText: |-
                            ="Filter By <br><b>Status</b>:"
                        PaddingLeft: =20
                        PaddingTop: =0
                        Size: =14
                        Width: =100
                        X: =40
                        Y: =40
                        ZIndex: =3

                    CmbFindApptStatus As combobox:
                        BorderColor: =VarTheme.InputBackground
                        BorderThickness: =0
                        ChevronBackground: =VarTheme.InputBackground
                        ChevronFill: =Color.Black
                        ChevronHoverBackground: =VarTheme.InputBackground
                        ChevronHoverFill: =Color.Black
                        DefaultSelectedItems: =[VarDefaultFilterAppointmentStatus]
                        DisplayFields: =["Value"]
                        Fill: =VarTheme.InputBackground
                        Font: =VarTheme.Font
                        InputTextPlaceholder: ="Select Status"
                        Items: =Choices('Appointment Status')
                        OnChange: |-
                            =If(!IsBlank(CmbFindApptStatus.Selected.Value),
                            Set(VarViewAllFindAppointmentRecords,true));
                        PaddingLeft: =12
                        PaddingRight: =0
                        SearchFields: =["Value"]
                        SearchItems: =Choices('Appointment Status',CmbFindApptStatus.SearchText)
                        SelectionColor: =Color.Black
                        SelectionFill: =RGBA(186, 202, 226, 1)
                        SelectMultiple: =false
                        Size: =14
                        Width: =210
                        ZIndex: =4

                    LblFindApptLocation As htmlViewer:
                        Font: =VarTheme.Font
                        Height: =80
                        HtmlText: |-
                            ="Filter By <br><b>Location</b>:"
                        PaddingLeft: =20
                        PaddingTop: =0
                        Size: =14
                        Width: =120
                        X: =40
                        Y: =40
                        ZIndex: =5

                    CmbFindApptLocation As combobox:
                        BorderColor: =VarTheme.InputBackground
                        BorderThickness: =0
                        ChevronBackground: =VarTheme.InputBackground
                        ChevronFill: =Color.Black
                        ChevronHoverBackground: =VarTheme.InputBackground
                        ChevronHoverFill: =Color.Black
                        DefaultSelectedItems: |-
                            =If(!IsBlank(VarDefaultSiteLocation),
                            LookUp(Locations, Location = VarDefaultSiteLocation.Location))
                        DisplayFields: =["msemr_name"]
                        Fill: =VarTheme.InputBackground
                        Font: =VarTheme.Font
                        InputTextPlaceholder: ="Select Location"
                        Items: |-
                            =Filter(
                                Locations,
                                'Location Status' = 'Location Status_1'.Live && 'Status (statecode)' = 'Status (Locations)'.Active
                            )
                        OnChange: |-
                            =If(!IsBlank(CmbFindApptLocation.Selected.Name),
                            Set(VarViewAllFindAppointmentRecords,true));
                        PaddingLeft: =12
                        PaddingRight: =0
                        SearchFields: =["msemr_name"]
                        SearchItems: |-
                            =Search(Filter(
                                Locations,
                                'Location Status' = 'Location Status_1'.Live && 'Status (statecode)' = 'Status (Locations)'.Active
                            ),CmbFindApptLocation.SearchText,"msemr_name")
                        SelectionColor: =Color.Black
                        SelectionFill: =RGBA(186, 202, 226, 1)
                        SelectMultiple: =false
                        Size: =14
                        Width: =210
                        ZIndex: =6

                ConFilter2FindAppt As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                    LayoutMinHeight: =0
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingTop: =19
                    ZIndex: =2

                    LblFindApptTestStatus As htmlViewer:
                        Font: =VarTheme.Font
                        Height: =60
                        HtmlText: |-
                            ="Filter By <br><b>Test Status</b>:"
                        PaddingRight: =0
                        Size: =14
                        Width: =120
                        X: =40
                        Y: =40
                        ZIndex: =1

                    CmbFindApptTestStatus As combobox:
                        BorderColor: =VarTheme.InputBackground
                        BorderThickness: =0
                        ChevronBackground: =VarTheme.InputBackground
                        ChevronFill: =Color.Black
                        ChevronHoverBackground: =VarTheme.InputBackground
                        ChevronHoverFill: =Color.Black
                        DisplayFields: =["Value"]
                        Fill: =VarTheme.InputBackground
                        Font: =VarTheme.Font
                        InputTextPlaceholder: ="Select Test Status"
                        Items: =Choices('Test Result')
                        OnChange: |-
                            =If(!IsBlank(CmbFindApptTestStatus.Selected.Value),
                            Set(VarViewAllFindAppointmentRecords,true));
                        PaddingBottom: =10
                        PaddingLeft: =12
                        PaddingTop: =10
                        SearchFields: =["Value"]
                        SearchItems: =Choices('Test Result',CmbFindApptTestStatus.SearchText)
                        SelectionColor: =Color.Black
                        SelectionFill: =RGBA(186, 202, 226, 1)
                        SelectMultiple: =false
                        Size: =14
                        Width: =210
                        ZIndex: =2

                    LblFindApptStartDate As htmlViewer:
                        Font: =VarTheme.Font
                        Height: =60
                        HtmlText: |-
                            ="Start <br><b>Date</b>:"
                        PaddingLeft: =20
                        Size: =14
                        Width: =100
                        X: =40
                        Y: =40
                        ZIndex: =3

                    DatStartDate As datepicker:
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =0
                        Fill: =VarTheme.InputBackground
                        Font: =VarTheme.Font
                        IconBackground: =VarTheme.InputBackground
                        IconFill: =VarTheme.InputTextDark
                        OnChange: |-
                            =Set(VarResetTodayChkBox,false);
                            Set(VarResetTodayChkBox,true);
                            Set(VarResetTodayChkBox,false);
                        OnSelect: =
                        PaddingTop: =5
                        Width: =210
                        ZIndex: =4

                    LblFindApptEndDate As htmlViewer:
                        AlignInContainer: =AlignInContainer.Start
                        Font: =VarTheme.Font
                        Height: =60
                        HtmlText: |-
                            ="End <br><b>Date</b>:"
                        PaddingLeft: =20
                        Size: =14
                        Width: =120
                        X: =40
                        Y: =40
                        ZIndex: =5

                    DatEndDate As datepicker:
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =0
                        Fill: =VarTheme.InputBackground
                        Font: =VarTheme.Font
                        IconBackground: =VarTheme.InputBackground
                        IconFill: =VarTheme.InputTextDark
                        IsEditable: =true
                        OnChange: |-
                            =Set(VarResetTodayChkBox,false);
                            Set(VarResetTodayChkBox,true);
                            Set(VarResetTodayChkBox,false);
                        PaddingTop: =5
                        Width: =210
                        ZIndex: =6

                ConFilter3FindAppt As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    LayoutMinHeight: =0
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingTop: =19
                    ZIndex: =3

                    ChkTodayAppt As checkbox:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        Default: =VarDefaultfilterTodaysAppt
                        Font: =VarTheme.Font
                        OnSelect: |-
                            =Set(VarViewAllFindAppointmentRecords,true);
                            Reset(DatStartDate);
                            Reset(DatEndDate);
                        PaddingBottom: =10
                        Reset: =VarResetTodayChkBox
                        Size: =16
                        Text: ="Today's Appointment Only"
                        Width: =330
                        ZIndex: =1

                    ChkTestNotReported As checkbox:
                        BorderStyle: =BorderStyle.None
                        Font: =VarTheme.Font
                        OnSelect: |-
                            =Set(
                                VarViewAllFindAppointmentRecords,
                                true);
                        PaddingBottom: =10
                        Size: =VarTheme.FontSize16
                        Text: ="Test Result Pending"
                        Visible: =false
                        Width: =320
                        ZIndex: =2

            IcoFilterBottomBorder As rectangle:
                Fill: =RGBA(230, 230, 230, 1)
                Height: =3
                Width: =Parent.Width
                Y: =247
                ZIndex: =3

            IcoFilterTopBorder As rectangle:
                Fill: =RGBA(230, 230, 230, 1)
                Height: =3
                Width: =Parent.Width
                ZIndex: =4

            CmbAptStatusValue As combobox:
                DisplayFields: =["Value"]
                Height: =36
                Items: =Choices('Appointment Status')
                SearchFields: =["Value"]
                SearchItems: =Choices('Appointment Status',CmbAptStatusValue.SearchText)
                Visible: =false
                Width: =151
                X: =474
                Y: =132
                ZIndex: =5

        DcFindAppointmentGallery As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =773
            Width: =Parent.Width
            WidthFit: =false
            X: =0
            Y: =1
            ZIndex: =2

            GalAppointment As gallery.galleryVertical:
                Height: =773
                Items: |-
                    =/*If(
                        ChkTestNotReported.Value = true,
                        SortByColumns(
                            Filter(
                                'Appointments (EMR)',
                                ((IsBlank(CmbFindApptStatus.Selected.Value) || IsEmpty(CmbFindApptStatus.Selected.Value) || 'Appointment Status' = CmbFindApptStatus.Selected.Value) && (IsBlank(CmbFindApptTestStatus.Selected.Value) || IsEmpty(CmbFindApptStatus.Selected.Value) || 'Test Result' = CmbFindApptTestStatus.Selected.Value) && (IsBlank(CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') || IsEmpty(CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') || 'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)' = CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') && (IsBlank(CmbFindApptLocation.Selected.Location) || IsEmpty(CmbFindApptLocation.Selected.Location) || Location.Location = CmbFindApptLocation.Selected.Location) && (IsBlank(locSearchValue) || IsEmpty(locSearchValue) || StartsWith(
                                    Patient.'Full Name',
                                    locSearchValue
                                ) || EndsWith(
                                    Patient.'Full Name',
                                    locSearchValue
                                ) || StartsWith(
                                    Patient.'Mobile Phone',
                                    locSearchValue
                                ) || StartsWith(
                                    Patient.'Confirmation Code',
                                    locSearchValue
                                ))) && VarViewAllFindAppointmentRecords = true && 'Appointment Date Time' >= DateAdd(
                                    DatStartDate.SelectedDate,
                                    -TimeZoneOffset(),
                                    Minutes
                                ) && 'Appointment Date Time' < DateAdd(
                                    DateAdd(
                                        DatEndDate.SelectedDate,
                                        -TimeZoneOffset(),
                                        Minutes
                                    ),
                                    24,
                                    Hours
                                ) && IsBlank('Test Result Date') && 'Appointment Test Type' = 'Service Group'.'Point of Care Testing' && !IsBlank('Fulfilled Date') && 'Appointment Status' = CmbAptStatusValue.Selected.Value
                            ),
                            "smvs_appointmentdatetime",
                            Ascending
                        ),*/
                        SortByColumns(
                            Filter(
                                'Appointments (EMR)',
                                ((IsBlank(CmbFindApptStatus.Selected.Value) || IsEmpty(CmbFindApptStatus.Selected.Value) || 'Appointment Status' = CmbFindApptStatus.Selected.Value) && (IsBlank(CmbFindApptTestStatus.Selected.Value) || IsEmpty(CmbFindApptStatus.Selected.Value) || 'Test Result' = CmbFindApptTestStatus.Selected.Value) && (IsBlank(CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') || IsEmpty(CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') || 'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)' = CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') && (IsBlank(CmbFindApptLocation.Selected.Location) || IsEmpty(CmbFindApptLocation.Selected.Location) || Location.Location = CmbFindApptLocation.Selected.Location) && (IsBlank(locSearchValue) || IsEmpty(locSearchValue) || StartsWith(
                                    Patient.'Full Name',
                                    locSearchValue
                                ) || EndsWith(
                                    Patient.'Full Name',
                                    locSearchValue
                                ) || StartsWith(
                                    Patient.'Mobile Phone',
                                    locSearchValue
                                ) || StartsWith(
                                    Patient.'Confirmation Code',
                                    locSearchValue
                                ))) && VarViewAllFindAppointmentRecords = true && 'Appointment Date Time' >= DateAdd(
                                    DatStartDate.SelectedDate,
                                    -TimeZoneOffset(),
                                    TimeUnit.Minutes
                                ) && 'Appointment Date Time' < DateAdd(
                                    DateAdd(
                                        DatEndDate.SelectedDate,
                                        -TimeZoneOffset(),
                                        TimeUnit.Minutes
                                    ),
                                    24,
                                    TimeUnit.Hours
                                )
                            ),
                            "smvs_appointmentdatetime",
                            SortOrder.Ascending
                        )
                Layout: =Layout.Vertical
                OnSelect: =
                TemplatePadding: =25
                TemplateSize: =410
                Width: =Parent.Width
                WrapCount: =2
                ZIndex: =5

                HtmlDataCardFindAppt As htmlViewer:
                    BorderColor: =RGBA(148, 148, 148, 1)
                    BorderStyle: =BorderStyle.Solid
                    BorderThickness: =1
                    Font: =Font.Lato
                    Height: =409
                    HtmlText: |-
                        ="<!-- CARDS CONTAINER - ROW -->
                                <div style='width: 100%; display: flex; flex-wrap: wrap; align-items: stretch; box-sizing: border-box;'>
                                    <!-- CARD DESIGN -->
                                    <div style='width: 100%;overflow:hidden;padding:0px'>
                                        <div style='position: relative;'>
                                            <!-- NEXT ARROW ICON -->
                                            <div style='position: absolute; top: 24px; right: 24px;'>
                                                <svg width='32' height='32' viewBox='0 0 32 32' fill='none' xmlns='http://www.w3.org/2000/svg'>
                        <path d='M17.3333 25.332L26.6666 15.9987L17.3333 6.66536M26.6666 15.9987L5.33329 15.9987' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                        </svg>
                                            </div>
                                            <!-- TOP SECTION -->
                                            <div style='padding: 24px;'>
                                                <!-- PATIENT INFO -->
                                                <div class='patient-info'>
                                                    <div style='font-weight: 700; font-size: 26.6px; color: #091E42; margin-bottom: 12px; margin-right: 24px;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;'>" & ThisItem.Patient.'Full Name' & "</div>
                                                    <div style='display: flex; margin-bottom: 26px; align-items: center;'>
                                                        <div style='margin-right: 28px; font-size: 18.6px;'><span style='font-weight: 700; color:#091E42'>DOB:</span> <span style='color:#2A2A2A'>" & ThisItem.Patient.Birthday & "</span></div>
                                                        <div style='font-size: 18.6px;'><span style='font-weight: 700; color:#091E42'>Phone:</span> <span style='color:#2A2A2A'>" & ThisItem.Patient.'Mobile Phone' & "</span></div>
                                                    </div>
                                                </div>
                                                <!-- APPOINTMENT INFO -->
                                                <div style='display: flex; margin-bottom: 26px;'>
                                                    <!-- PCR TEST ICON -->
                                                    <div style='height:100px;width:100px'>
                                                    " &
                            //Text(LblServiceGroup) = "true",
                         If(
                            ThisItem.'Appointment Test Type' = 'Service Group'.'Point of Care Testing',
                            "<svg width='100' height='100' viewBox='0 0 100 100' fill='none' xmlns='http://www.w3.org/2000/svg'>
                        <rect width='100' height='100' fill='#F3F3F4'/>
                        <path fill-rule='evenodd' clip-rule='evenodd' d='M59.4642 27.8539C60.4084 26.9741 61.6721 26.4564 63.0057 26.403C64.3394 26.3496 65.6461 26.7644 66.6677 27.5655L67.0064 27.8539L68.892 29.6144C69.8352 30.4943 70.3905 31.6719 70.4483 32.9148C70.506 34.1577 70.0621 35.3756 69.204 36.3283L68.8947 36.6466L67.0064 38.4046C66.8439 38.5557 66.671 38.6969 66.489 38.8274C66.7224 39.6074 66.7479 40.4287 66.5634 41.22C66.3788 42.0113 65.9899 42.7486 65.4302 43.3679L65.1209 43.6788L62.4805 46.1405C64.3168 47.6558 65.7865 49.5178 66.7921 51.6031C67.7977 53.6883 68.3162 55.9491 68.3133 58.2354C68.3133 62.3234 66.6864 66.0558 64.0034 68.903L63.486 69.4252H70.9802C71.66 69.4259 72.3138 69.6686 72.8081 70.1037C73.3024 70.5388 73.5999 71.1334 73.6397 71.7661C73.6795 72.3988 73.4588 73.0218 73.0225 73.5078C72.5862 73.9938 71.9673 74.3062 71.2923 74.381L70.9802 74.3984H28.3083C27.6286 74.3977 26.9747 74.1551 26.4805 73.72C25.9862 73.2849 25.6887 72.6903 25.6489 72.0575C25.609 71.4249 25.8298 70.8018 26.2661 70.3158C26.7024 69.8298 27.3213 69.5175 27.9963 69.4426L28.3083 69.4252H50.9778C53.3856 69.4255 55.7378 68.7505 57.7287 67.488C59.7197 66.2254 61.2573 64.4338 62.1417 62.3458C63.0262 60.2578 63.2166 57.97 62.6882 55.7798C62.1598 53.5895 60.937 51.5982 59.1788 50.0644L58.6987 49.6665L50.0337 57.748C49.0896 58.6271 47.8264 59.1444 46.4934 59.1978C45.1603 59.2512 43.8543 58.8368 42.8328 58.0365L42.4914 57.7456L36.8347 52.4714C35.8907 51.5914 35.335 50.4133 35.2772 49.1699C35.2194 47.9264 35.6638 46.7079 36.5227 45.7551L36.8347 45.4393L51.9219 31.3725C52.5899 30.7494 53.4234 30.303 54.3372 30.0789C55.251 29.8547 56.2122 29.8609 57.1225 30.0968L57.3412 29.8482L57.5786 29.6144L59.4642 27.8539ZM34.9491 54.232L40.6032 59.5061C40.8581 59.7353 41.0614 60.0095 41.2014 60.3128C41.3414 60.6161 41.4153 60.9424 41.4186 61.2725C41.4219 61.6027 41.3547 61.9302 41.2208 62.2359C41.0869 62.5415 40.8891 62.8193 40.6389 63.0529C40.3887 63.2866 40.091 63.4714 39.7634 63.5966C39.4357 63.7219 39.0846 63.785 38.7304 63.7824C38.3763 63.7798 38.0263 63.7114 37.7008 63.5813C37.3753 63.4512 37.0809 63.262 36.8347 63.0246L31.1753 57.748C30.9277 57.517 30.7313 57.2428 30.5974 56.941C30.4635 56.6392 30.3946 56.3157 30.3947 55.9891C30.3948 55.6625 30.464 55.3391 30.5981 55.0374C30.7323 54.7357 30.9289 54.4616 31.1767 54.2307C31.4245 53.9998 31.7186 53.8167 32.0423 53.6919C32.366 53.567 32.7129 53.5028 33.0632 53.5029C33.4135 53.503 33.7603 53.5674 34.0839 53.6925C34.4075 53.8176 34.7015 54.0009 34.9491 54.232ZM63.2353 31.375L61.3497 33.133L63.2353 34.891L65.1209 33.133L63.2353 31.375Z' fill='#0052CC'/>
                        </svg> ",
                            //LblMTM.Text = "true",
                            ThisItem.'Appointment Test Type' = 'Service Group'.'Assessment and Intervention',
                            "<svg width='100' height='100' viewBox='0 0 100 100' fill='none' xmlns='http://www.w3.org/2000/svg'>
                        <rect width='100' height='100' fill='#F3F3F4'/>
                        <path d='M51.4729 29.7788C51.2796 29.5852 51.05 29.4315 50.7973 29.3267C50.5445 29.2219 50.2736 29.168 50 29.168C49.7264 29.168 49.4555 29.2219 49.2027 29.3267C48.95 29.4315 48.7204 29.5852 48.5271 29.7788L29.7771 48.5288C29.4858 48.8202 29.2875 49.1913 29.2071 49.5954C29.1268 49.9995 29.168 50.4183 29.3257 50.7989C29.4833 51.1795 29.7503 51.5049 30.0928 51.7338C30.4353 51.9627 30.838 52.085 31.25 52.0851H33.3333V66.6684C33.3333 68.9663 35.2021 70.8351 37.5 70.8351H62.5C64.7979 70.8351 66.6667 68.9663 66.6667 66.6684V52.0851H68.75C69.1624 52.086 69.5658 51.9643 69.909 51.7356C70.2522 51.5068 70.5196 51.1812 70.6774 50.8002C70.8353 50.4192 70.8763 49.9998 70.7954 49.5954C70.7145 49.191 70.5152 48.8198 70.2229 48.5288L51.4729 29.7788ZM62.5021 66.6684H37.5V46.6976L50 34.1976L62.5 46.6976V56.2517L62.5021 66.6684Z' fill='#0052CC'/>
                        <path d='M52.0834 45.832H47.9167V52.082H41.6667V56.2487H47.9167V62.4987H52.0834V56.2487H58.3334V52.082H52.0834V45.832Z' fill='#0259A8'/>
                        </svg>
                         ",
                            "<svg width='100' height='100' viewBox='0 0 100 100' fill='none' xmlns='http://www.w3.org/2000/svg'>
                        <rect width='100' height='100' fill='#F3F3F4'/>
                        <path d='M50 37.5317L44.6146 42.878L51.0732 49.3366L49.0049 51.4049L42.5463 44.9463L39.0927 48.4L45.5512 54.8585L43.4829 56.9268L37.0244 50.4683L33.122 54.3707C32.5018 54.9714 32.0984 55.7607 31.9748 56.6152C31.8513 57.4696 32.0145 58.3409 32.439 59.0927L34.3902 62.7805L30 67.2488L32.7512 70L37.2195 65.6098L40.9073 67.561C41.5021 67.8981 42.1749 68.073 42.8585 68.0683C43.3735 68.0687 43.8834 67.9672 44.359 67.7696C44.8345 67.572 45.2662 67.2823 45.6293 66.9171L62.4683 50L50 37.5317ZM65.2195 44.5366L61.7268 41.0244L64.4976 38.2732L67.2488 41.0244L70 38.2732L61.7268 30L58.9756 32.7512L61.7268 35.522L58.9756 38.2732L55.4634 34.7805L52.0683 31.3659L49.3171 34.1366L51.3268 36.1463V36.1659L63.8341 48.6732H63.8537L65.8634 50.6829L68.6341 47.9317L65.239 44.5366H65.2195V44.5366Z' fill='#0052CC'/>
                        </svg>
                        "
                        ) & "
                        </div>
                                                    <div style='margin-left: 20px;'>
                                                        <div style='font-size: 21.3px; font-weight: 700;height:45px;width:300px; overflow: hidden;text-overflow: ellipsis;white-space: nowrap'>" & If(
                            (ThisItem.'Healthcare Service'.Name = "I'm not sure" || ThisItem.'Healthcare Service'.Name = "I am not sure"),
                            Text(
                                LookUp(
                                    'Sub Services',
                                    'Healthcare Service (msemr_healthcareserviceid)' = ThisItem.'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)'
                                ).Service.Name
                            ),
                            ThisItem.'Healthcare Service'.Name
                        ) & "
                                                        </div>
                                                        <div style='margin: 12px 0; display: flex; align-items: center;'>
                                                            <svg width='20' height='20' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>
                        <path d='M17.9995 4H5.99951C3.79037 4 1.99951 5.79086 1.99951 8V18C1.99951 20.2091 3.79037 22 5.99951 22H17.9995C20.2087 22 21.9995 20.2091 21.9995 18V8C21.9995 5.79086 20.2087 4 17.9995 4Z' stroke='#091E42' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                        <path d='M7.99951 2V6M15.9995 2V6M1.99951 10H21.9995' stroke='#091E42' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                        </svg>
                                                            <span style='color: #2A2A2A; margin-left: 8px;font-size: 18.6px;'>" & Text(
                            ThisItem.'Appointment Date Time',
                            DateTimeFormat.ShortDate
                        ) & "</span>
                                                        </div>
                                                        <div style='display: flex; align-items: center;'>
                                                            <svg width='21' height='21' viewBox='0 0 13 17' fill='none' xmlns='http://www.w3.org/2000/svg'>
                                                                <path d='M6.33301 9.16406C7.43758 9.16406 8.33301 8.26863 8.33301 7.16406C8.33301 6.05949 7.43758 5.16406 6.33301 5.16406C5.22844 5.16406 4.33301 6.05949 4.33301 7.16406C4.33301 8.26863 5.22844 9.16406 6.33301 9.16406Z' stroke='#091E42' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                                                                <path d='M6.33333 1.83203C4.91885 1.83203 3.56229 2.39393 2.5621 3.39413C1.5619 4.39432 1 5.75088 1 7.16536C1 8.4267 1.268 9.25203 2 10.1654L6.33333 15.1654L10.6667 10.1654C11.3987 9.25203 11.6667 8.4267 11.6667 7.16536C11.6667 5.75088 11.1048 4.39432 10.1046 3.39413C9.10438 2.39393 7.74782 1.83203 6.33333 1.83203V1.83203Z' stroke='#091E42' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                                                            </svg>
                                                            <span style='color: #2A2A2A;width:250px; margin-left: 8px;font-size: 18.6px;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;'>" & ThisItem.Location.Name & "</span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <!-- STATUS SECTION -->
                                                <div style='display: flex; align-items: center;'>
                                                    <div style='display: flex; align-items: center;'>
                                                        <div style='font-size: 18.6px; font-weight: 600; width: 120px; padding: 10px; text-align: center; 
                                                        background-color: " & If(
                            ThisItem.'Appointment Status' = 'Appointment Status'.Booked,
                            "rgba(0, 82, 204, 1)",
                            ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                            "rgba(108, 170, 149, 1)",
                            ThisItem.'Appointment Status' = 'Appointment Status'.'No Show',
                            "rgba(222, 53, 11, 1)",
                            "rgba(255, 153, 31, 1)"
                        ) & "; 
                                                        color: #ffffff; box-sizing: border-box;'>" & ThisItem.'Appointment Status' & "</div>
                                                         " & If(ThisItem.'Appointment Booking Type Options'='Appointment Booking Type'.Multiservice,"
                                                        <!-- MULTI-SERVICE ICON -->
                                                        <div style='font-size: 18.6px; font-weight: 600; width: 140px; margin-left: 8px; padding: 10px; text-align: center; background-color: #6CAA95; color: #ffffff; box-sizing: border-box;'>Multi-service</div>
                        "
                        ) & "
                                                    </div>
                                                    <span style='margin-left: auto; color: #091E42; font-size: 24px; font-weight: 700;'>" & ThisItem.Patient.'Confirmation Code' & "</span>
                                                </div>
                                            </div>
                                            <!-- BOTTOM SECTION -->
                                            <div style='display: flex; align-items: center; border-top: 1px solid #949494;'>
                                            " & If(
                            !IsBlank(ThisItem.'Test Result'),
                            "
                                                <!-- ACTION NEEDED - TEST RESULT -->
                                                <div style='margin-left: 24px;'>
                                                    <div style='display: flex; align-items: center;font-size: 18.6px;'>
                                                        Test Result: <span style='font-weight: 600; margin-left: 4px;
                                                        color:" & If(
                                ThisItem.'Test Result' = 'Test Result'.Positive,
                                "rgba(222, 53, 11, 1)",
                                ThisItem.'Test Result' = 'Test Result'.Negative,
                                "rgba(108, 170, 149, 1)",
                                "rgba(255, 153, 31, 1)"
                            ) & "'> " & ThisItem.'Test Result' & "</span>
                                                        <!-- Test Result: <span style='color:#6CAA95; font-weight: 600; margin-left: 4px;'>Negative</span> -->
                                                    </div>
                                                </div>
                        "
                        ) & "
                        " & If(
                            IsBlank(ThisItem.'Test Result') && ThisItem.'Appointment Test Type' = 'Service Group'.'Point of Care Testing' && ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                            "
                                                <!-- ACTION NEEDED -->
                                                <div style='margin-left: 24px;'>
                                                    <div style='display: flex; align-items: center; margin-bottom: 4px;'>
                                                        <svg width='28' height='29' viewBox='0 0 24 25' fill='none' xmlns='http://www.w3.org/2000/svg'>
                                                            <path d='M10.91 3.28161C11.4076 3.00609 11.991 2.92924 12.543 3.06654C13.095 3.20383 13.5745 3.54508 13.885 4.02161L13.968 4.15961L21.727 18.1686C21.9102 18.4997 22.0069 18.8716 22.0082 19.25C22.0096 19.6283 21.9155 20.0009 21.7347 20.3333C21.5538 20.6656 21.2921 20.947 20.9737 21.1514C20.6553 21.3558 20.2905 21.4766 19.913 21.5026L19.759 21.5086H4.24298C3.86502 21.5086 3.49315 21.4134 3.1617 21.2318C2.83024 21.0501 2.54989 20.7879 2.3465 20.4693C2.14312 20.1508 2.02327 19.7861 1.99801 19.409C1.97275 19.0319 2.0429 18.6545 2.20198 18.3116L2.27398 18.1686L10.031 4.15961C10.2355 3.79038 10.5398 3.48613 10.909 3.28161H10.91ZM20.415 18.8946L12.655 4.88661C12.5944 4.77746 12.5074 4.68517 12.4021 4.61812C12.2968 4.55107 12.1764 4.51137 12.0518 4.50263C11.9273 4.49389 11.8025 4.51638 11.6889 4.56807C11.5752 4.61975 11.4763 4.699 11.401 4.79861L11.344 4.88661L3.58698 18.8946C3.52751 19.0017 3.49519 19.1218 3.49286 19.2443C3.49052 19.3669 3.51825 19.4881 3.5736 19.5974C3.62895 19.7067 3.71025 19.8008 3.81038 19.8715C3.91051 19.9421 4.02642 19.9871 4.14798 20.0026L4.24298 20.0086H19.759C19.8814 20.0085 20.002 19.9784 20.1102 19.921C20.2183 19.8635 20.3108 19.7805 20.3795 19.6791C20.4481 19.5777 20.4909 19.461 20.5041 19.3392C20.5172 19.2175 20.5004 19.0944 20.455 18.9806L20.415 18.8946L12.655 4.88661L20.415 18.8946V18.8946ZM12 16.5016C12.1338 16.4974 12.267 16.5201 12.3919 16.5683C12.5167 16.6166 12.6306 16.6895 12.7267 16.7826C12.8229 16.8758 12.8993 16.9873 12.9515 17.1105C13.0037 17.2338 13.0306 17.3663 13.0306 17.5001C13.0306 17.634 13.0037 17.7664 12.9515 17.8897C12.8993 18.0129 12.8229 18.1245 12.7267 18.2176C12.6306 18.3107 12.5167 18.3836 12.3919 18.4319C12.267 18.4801 12.1338 18.5028 12 18.4986C11.7406 18.4904 11.4947 18.3816 11.3141 18.1952C11.1335 18.0089 11.0326 17.7596 11.0326 17.5001C11.0326 17.2406 11.1335 16.9913 11.3141 16.805C11.4947 16.6186 11.7406 16.5098 12 16.5016V16.5016ZM11.995 8.99961C12.1762 8.99934 12.3515 9.06473 12.4882 9.18367C12.625 9.30261 12.7141 9.46707 12.739 9.64661L12.746 9.74861L12.75 14.2506C12.7522 14.4421 12.6811 14.6272 12.5513 14.7679C12.4214 14.9086 12.2426 14.9944 12.0516 15.0076C11.8606 15.0207 11.6717 14.9603 11.5238 14.8387C11.3759 14.7171 11.28 14.5436 11.256 14.3536L11.25 14.2516L11.246 9.74961C11.246 9.5507 11.325 9.35993 11.4656 9.21928C11.6063 9.07863 11.7971 8.99961 11.996 8.99961H11.995Z' fill='#FF991F'/>
                                                        </svg>
                                                        <div style='margin-left: 8px; color: #FF991F;font-size: 16px; font-weight: 600;'>Test results has not been updated yet.</div>
                                                    </div>
                                                    <div style='display: flex; align-items: center;'>
                                                        <div style='cursor: pointer; font-weight: 600; color: #0052CC; border-bottom: 1px solid #0052CC; margin-right: 16px;font-size: 16px;'>Update results here</div>
                                                    </div>
                                                </div>"
                        ) & "
                                                <!-- MENU ICON -->
                                                <div style='margin-left: auto; cursor: pointer;'>
                                                   <svg width='48' height='78' viewBox='0 0 48 78' fill='none' xmlns='http://www.w3.org/2000/svg'>
                        <rect width='48' height='78' fill='white'/>
                        <path d='M24 55C25.1046 55 26 54.1046 26 53C26 51.8954 25.1046 51 24 51C22.8954 51 22 51.8954 22 53C22 54.1046 22.8954 55 24 55Z' fill='black' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                        <path d='M24 41C25.1046 41 26 40.1046 26 39C26 37.8954 25.1046 37 24 37C22.8954 37 22 37.8954 22 39C22 40.1046 22.8954 41 24 41Z' fill='black' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                        <path d='M24 27C25.1046 27 26 26.1046 26 25C26 23.8954 25.1046 23 24 23C22.8954 23 22 23.8954 22 25C22 26.1046 22.8954 27 24 27Z' fill='black' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                        </svg>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                        "
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Width: =474.5
                    Y: =1
                    ZIndex: =1

                BtnUpdateResults As button:
                    Align: =Align.Left
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 0)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    Fill: =RGBA(0, 0, 0, 0)
                    Font: =VarTheme.Font
                    HoverBorderColor: =
                    HoverColor: =
                    HoverFill: =RGBA(0, 0, 0, 0)
                    OnSelect: |-
                        =Set(gblSelectedPatient,First(Filter(Contacts,Contact=ThisItem.Patient.Contact)));
                        Set(
                            gblSelectedAppointmentPatient,
                            ThisItem
                        );
                        
                        ClearCollect(selectAppointment,ThisItem);
                        Set(gblSelectedAppointmentPatient,First(selectAppointment));
                        
                        Reset(GalServiceInfoApptDetails);
                        
                        Set(VarTestResultPopUpFind,true);
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =12
                    Text: =""
                    Underline: =true
                    Visible: =IsBlank(ThisItem.'Test Result') && ThisItem.'Appointment Test Type'='Service Group'.'Point of Care Testing' && ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled
                    Width: =300
                    X: =12
                    Y: =357
                    ZIndex: =2

                BtnOpenAppt As button:
                    BorderColor: =
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 0)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    Fill: =RGBA(0, 0, 0, 0)
                    Font: =Font.Lato
                    Height: =324
                    HoverBorderColor: =
                    HoverColor: =RGBA(0, 0, 0, 0)
                    HoverFill: =
                    OnSelect: |
                        =Set(
                            VarSOAPHistory,
                            false
                        );
                        Set(
                            VarOpenFulfill,
                            false
                        );
                        Set(
                            existingPaymentInfo,
                            Blank()
                        );
                        Set(
                            gblSelectedPatient,
                            First(
                                Filter(
                                    Contacts,
                                    Contact = ThisItem.Patient.Contact
                                )
                            )
                        );
                        Set(
                            gblSelectedAppointmentPatient,
                            ThisItem
                        );
                        ClearCollect(
                            selectAppointment,
                            ThisItem
                        );
                        Set(
                            gblSelectedAppointmentPatient,
                            First(selectAppointment)
                        );
                        //checking primary / secondary service tab variable for multiservice
                        If(
                            ThisItem.'Appointment Booking Type Options' = 'Appointment Booking Type'.Multiservice && !IsBlank(ThisItem.'Parent Appointment'),
                            Set(
                                varSelectPrimaryAppt,
                                false
                            ) && Set(
                                varSelectSecondaryAppt,
                                true
                            ),
                            ThisItem.'Appointment Booking Type Options' = 'Appointment Booking Type'.Multiservice && IsBlank(ThisItem.'Parent Appointment'),
                            Set(
                                varSelectPrimaryAppt,
                                true
                            ) && Set(
                                varSelectSecondaryAppt,
                                false
                            )
                        );
                        //checking primary / secondary service tab variable for multiservice end
                        Reset(GalServiceInfoApptDetails);
                        Set(
                            VarPatientAppoinmentMode,
                            "Edit"
                        );
                        Set(
                            VarDdlFullfilled,
                            Blank()
                        );
                        Set(
                            VarIISConsent,
                            First('App Settings').'Enable IIS Consent'
                        );
                        Set(
                            VarDetailHealthCategory,
                            LookUp(
                                Services,
                                'Healthcare Service Category (msemr_healthcareservicecategoryid)' = gblSelectedAppointmentPatient.'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)'
                            )
                        );
                        Set(
                            VarSelectedLocationRecordAppointments,
                            gblSelectedAppointmentPatient.Location
                        );
                        Set(
                            VarIncludeInsuranceAppointments,
                            VarSelectedLocationRecordAppointments.Insurance
                        );
                        Set(
                            VarIncludeNoInsuranceAppointments,
                            VarSelectedLocationRecordAppointments.'No Insurance'
                        );
                        Set(
                            VarIncludePayAtServiceAppointments,
                            VarSelectedLocationRecordAppointments.'Pay at the time of Service'
                        );
                        Set(
                            VarStatusPopUp,
                            false
                        );
                        Set(
                            VarPopUpFulfill,
                            false
                        );
                        Set(
                            VarConfirmationPopUp,
                            false
                        );
                        If(
                            !IsBlank(gblSelectedPatient),
                            Navigate([@ScnAppointmentDetails])
                        );
                        Set(
                            VarNavigatePrevious,
                            ScnFindAppointment
                        );
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    Text: =""
                    Width: =Parent.TemplateWidth
                    ZIndex: =3

                BtnMoreOptionsFindAppt As button:
                    Align: =Align.Left
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 0)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    Fill: =RGBA(0, 0, 0, 0)
                    Font: =VarTheme.Font
                    Height: =86
                    HoverBorderColor: =
                    HoverColor: =
                    HoverFill: =RGBA(0, 0, 0, 0)
                    OnSelect: |-
                        =//Show popup option
                        Set(
                            VarOptionsPopUp,
                            true
                        );
                        
                        //Adding options to show in the options
                        Clear(colOptionsPopUpFindAppt);
                        If(
                            ThisItem.'Appointment Status' = 'Appointment Status'.Booked || ThisItem.'Appointment Status' = 'Appointment Status'.'Checked-In',
                            Collect(
                                colOptionsPopUpFindAppt,
                                {Label: "Change Service"}
                            )
                        );
                        If(
                            ThisItem.'Appointment Status' = 'Appointment Status'.Booked || ThisItem.'Appointment Status' = 'Appointment Status'.'Checked-In',
                            Collect(
                                colOptionsPopUpFindAppt,
                                {Label: "Reschedule"}
                            )
                        );
                        
                        If(
                            IsBlank(ThisItem.'Test Result') && ThisItem.'Appointment Test Type'='Service Group'.'Point of Care Testing' && ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                            Collect(
                                colOptionsPopUpFindAppt,
                                {Label: "Add Test Result"}
                            ),
                            !IsBlank(ThisItem.'Test Result') && ThisItem.'Appointment Test Type'='Service Group'.'Point of Care Testing' && ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                            Collect(
                                colOptionsPopUpFindAppt,
                                {Label: "Edit Test Result"}
                            )
                        );
                        If(
                            ThisItem.'Appointment Test Type'<>'Service Group'.'Point of Care Testing' && ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                            Collect(
                                colOptionsPopUpFindAppt,
                                {Label: "View Prescription"}
                            )
                        );
                        Collect(
                            colOptionsPopUpFindAppt,
                            "View Profile"
                        );
                        If(
                            ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                            Collect(
                                colOptionsPopUpFindAppt,
                                {Label: "Add New Appointment"}
                            )
                        );
                        
                        //Setting value for selected patient
                        Set(
                            gblSelectedPatient,
                            First(
                                Filter(
                                    Contacts,
                                    Contact = ThisItem.Patient.Contact
                                )
                            )
                        );
                        
                        //Setting value for selected patient
                        Set(
                            gblSelectedAppointmentPatient,
                            ThisItem
                        );
                        
                        //Setting value for selected patient
                        ClearCollect(
                            selectAppointment,
                            ThisItem
                        );
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =12
                    Text: =""
                    Underline: =true
                    Width: =48
                    X: =420
                    Y: =324
                    ZIndex: =4

                ConPopUpFindAppt As groupContainer.manualLayoutContainer:
                    Height: =410
                    Visible: =VarOptionsPopUp && ThisItem.IsSelected
                    Width: =Parent.TemplateWidth
                    ZIndex: =5

                    BgClosePopupFindAppt As rectangle:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        Fill: =RGBA(0, 0, 0, 0)
                        Height: =Parent.Height
                        HoverFill: =RGBA(0, 0, 0, 0)
                        OnSelect: =Set(VarOptionsPopUp,false);
                        PressedFill: =RGBA(0, 0, 0, 0)
                        Width: =Parent.Width
                        ZIndex: =1

                    galOptionsPopUpFindAppt As gallery.galleryVertical:
                        BorderColor: =RGBA(224, 224, 219, 1)
                        BorderThickness: =2
                        Fill: =RGBA(255, 255, 255, 1)
                        Height: =galOptionsPopUpFindAppt.TemplateHeight * CountRows(galOptionsPopUpFindAppt.AllItems)
                        Items: =colOptionsPopUpFindAppt
                        Layout: =Layout.Vertical
                        ShowScrollbar: =false
                        TemplatePadding: =10
                        TemplateSize: =40
                        Width: =250
                        X: =Parent.Width-Self.Width-40
                        Y: =226
                        ZIndex: =3

                        BtnPopUpFindAppt As button:
                            Align: =Align.Left
                            BorderStyle: =BorderStyle.None
                            Color: =VarTheme.InputText
                            Fill: =RGBA(0, 0, 0, 0)
                            Font: =VarTheme.Font
                            HoverBorderColor: =RGBA(0, 0, 0, 0)
                            HoverColor: =VarTheme.InputText
                            HoverFill: =RGBA(0, 0, 0, 0)
                            OnSelect: |-
                                =//Setting up common block of functions
                                Set(
                                    VarOptionsPopUpHome,
                                    false
                                );
                                Set(
                                    glbPatientPersonalInfo,
                                    First(
                                        Filter(
                                            Contacts,
                                            Contact = gblSelectedPatient.Contact
                                        )
                                    )
                                );
                                Set(
                                    VarSelectedLocationRecordAppointments,
                                    gblSelectedAppointmentPatient.Location
                                );
                                Concurrent(
                                    Set(
                                        VarIncludeInsuranceAppointments,
                                        VarSelectedLocationRecordAppointments.Insurance
                                    ),
                                    Set(
                                        VarIncludeNoInsuranceAppointments,
                                        VarSelectedLocationRecordAppointments.'No Insurance'
                                    ),
                                    Set(
                                        VarIncludePayAtServiceAppointments,
                                        VarSelectedLocationRecordAppointments.'Pay at the time of Service'
                                    )
                                );
                                //Triggering Code depending upon the cases
                                If(
                                    //Code to trigger when Label is Change Service
                                    ThisItem.Label = "Change Service",
                                    Set(
                                        VarChangeServiceHome,
                                        true
                                    );
                                    Reset(GalServiceInfoApptDetails);
                                    Set(
                                        VarPatientAppoinmentMode,
                                        "Edit"
                                    );
                                    Set(
                                        VarDdlFullfilled,
                                        Blank()
                                    );
                                    Set(
                                        VarIISConsent,
                                        First('App Settings').'Enable IIS Consent'
                                    );
                                    Set(
                                        VarDetailHealthCategory,
                                        LookUp(
                                            Services,
                                            'Healthcare Service Category (msemr_healthcareservicecategoryid)' = gblSelectedAppointmentPatient.'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)'
                                        )
                                    );
                                    If(
                                        !IsBlank(gblSelectedPatient),
                                        Navigate([@ScnAppointmentDetails])
                                    );
                                    Set(
                                        VarNavigatePrevious,
                                        ScnFindAppointment
                                    );
                                    Set(
                                        VarPatientProfileMode,
                                        "Edit"
                                    );
                                    Set(
                                        VarPatientAppoinmentMode,
                                        "Edit"
                                    );
                                    Set(
                                        VarHidePatientVerificationCard,
                                        true
                                    );
                                    Reset([@CmbService]);
                                    Reset([@CmbSubService]);
                                    Navigate([@ScnLocation]);
                                    ,
                                     //Code to trigger when Label is Reschedule
                                    ThisItem.Label = "Reschedule",
                                    Set(
                                        gblSelectedAppointmentPatient,
                                        First(selectAppointment)
                                    );
                                    Reset(GalServiceInfoApptDetails);
                                    Set(
                                        VarPatientAppoinmentMode,
                                        "Edit"
                                    );
                                    Set(
                                        VarDdlFullfilled,
                                        Blank()
                                    );
                                    Set(
                                        VarIISConsent,
                                        First('App Settings').'Enable IIS Consent'
                                    );
                                    Set(
                                        VarDetailHealthCategory,
                                        LookUp(
                                            Services,
                                            'Healthcare Service Category (msemr_healthcareservicecategoryid)' = gblSelectedAppointmentPatient.'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)'
                                        )
                                    );
                                    Set(
                                        VarRescheduleLocationRecord,
                                        LookUp(
                                            Locations,
                                            Location = CmbSiteLocation.Selected.Location
                                        )
                                    );
                                    Set(
                                        VarRescheduleSlotDurationInterval,
                                        VarRescheduleLocationRecord.'Block duration (minutes)'
                                    );
                                    Set(
                                        VarRescheduleStartTime,
                                        DateTimeValue(
                                            Text(
                                                Text(
                                                    Today(),
                                                    "mm/dd/yyyy"
                                                ) & " " & VarRescheduleLocationRecord.'Clinic start time'
                                            )
                                        )
                                    );
                                    Set(
                                        VarRescheduleBlockDuration,
                                        (VarRescheduleLocationRecord.'Block duration (minutes)' / (60 * 24))
                                    );
                                    Set(
                                        VarRescheduleclinicDuration,
                                        Value(VarRescheduleLocationRecord.'Clinic duration')
                                    );
                                    Set(
                                        VarRescheduleclinicPerHour,
                                        Value(Text(VarRescheduleLocationRecord.'Block per hour'))
                                    );
                                    Set(
                                        VarRescheduleTotalSlotBlock,
                                        VarRescheduleclinicDuration * VarRescheduleclinicPerHour
                                    );
                                    Clear(rescheduleDefaultAppointmentSlotCollection);
                                    If(
                                        CountRows(rescheduleDefaultAppointmentSlotCollection) < VarRescheduleTotalSlotBlock,
                                        ClearCollect(
                                            rescheduleDefaultAppointmentSlotCollection,
                                            ForAll(
                                                Sequence(VarRescheduleTotalSlotBlock),
                                                {VarRescheduleStartTime: VarRescheduleStartTime + VarRescheduleBlockDuration * (Value - 1)}
                                            )
                                        )
                                    );
                                    ClearCollect(
                                        ServiceExistingAppDataSlot,
                                        AddColumns(
                                            gblSelectedAppointmentPatient.'Healthcare Service'.'Slots (smvs_msemr_healthcareservice_msemr_slot_msemr_)',
                                            "Date",
                                            Start,
                                            "Time",
                                            End,
                                            "SlotId",
                                            Slot,
                                            "Dose",
                                            'Appointment Type'
                                        )
                                    );
                                    Set(
                                        VarRescheduleSelectedDate,
                                        Blank()
                                    );
                                    Set(
                                        VarSelectedItem,
                                        false
                                    );
                                    Reset(GalFirstDoseDefaultSlot_1);
                                    Reset(GalSecondDoseDefaultSlot_1);
                                    Navigate(ScnReschedule);
                                    ,
                                     //Code to trigger when Label is Add Test Result or Edit Test Result
                                    ThisItem.Label = "Add Test Result" || ThisItem.Label = "Edit Test Result",
                                    Reset(GalServiceInfoApptDetails);
                                    Set(
                                        VarTestResultPopUpFind,
                                        true
                                    );
                                    Set(
                                        VarPopUpTestResultFind,
                                        true
                                    );
                                    ,
                                     //Code to trigger when Label is View Prescription
                                    ThisItem.Label = "View Prescription",
                                    Set(
                                        gblSelectedAppointmentPatient,
                                        First(selectAppointment)
                                    );
                                    Reset(GalServiceInfoApptDetails);
                                    Set(
                                        VarPatientAppoinmentMode,
                                        "Edit"
                                    );
                                    Set(
                                        VarDdlFullfilled,
                                        Blank()
                                    );
                                    Set(
                                        VarIISConsent,
                                        First('App Settings').'Enable IIS Consent'
                                    );
                                    Navigate(ScnPrescriptionPDF);
                                    ,
                                     //Code to trigger when Label is View Profile
                                    ThisItem.Label = "View Profile",
                                    Navigate(ScnPatientAppointment);
                                    ,
                                     //Code to trigger when Label is Add New Appointment
                                    ThisItem.Label = "Add New Appointment",
                                    Set(
                                        VarConfirmationScreen,
                                        true
                                    );
                                    Set(
                                        VarNewPatient,
                                        false
                                    );
                                    Set(
                                        VarPatientProfileMode,
                                        "Edit"
                                    );
                                    Set(
                                        VarPatientAppoinmentMode,
                                        "New"
                                    );
                                    Set(
                                        VarNewAppointmentValidationChk,
                                        false
                                    );
                                    Set(
                                        gblSelectedAppointmentPatient,
                                        Blank()
                                    );
                                    Set(
                                    existingPaymentInfo,
                                    First(
                                        Sort(
                                            Filter(
                                                'Appointments (EMR)',
                                                Patient.Contact = gblSelectedPatient.Contact
                                            ),
                                            'Date Created',
                                            SortOrder.Descending
                                        )
                                    )
                                );
                                    ResetForm(FrmPayment);
                                    Reset([@CmbSiteLocation]);
                                    Reset([@CmbServiceType]);
                                    Reset([@CmbService]);
                                    Reset([@CmbSubService]);
                                    Set(
                                        VarReturningPatient,
                                        true
                                    );
                                    Set(
                                        VarExistingPatient,
                                        true
                                    );
                                    Navigate(
                                        ScnPatientType,
                                        ScreenTransition.None
                                    );
                                    
                                )
                            PaddingLeft: =20
                            PressedBorderColor: =RGBA(0, 0, 0, 0)
                            PressedColor: =VarTheme.InputText
                            PressedFill: =RGBA(0, 0, 0, 0)
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Size: =16
                            Text: =ThisItem.Label
                            Width: =230
                            ZIndex: =2

        DcAppointmentCount As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =61
            Visible: =CountRows(GalAppointment.AllItems)>0 
            Width: =1024
            WidthFit: =false
            X: =0
            Y: =2
            ZIndex: =3

            LblTotal As label:
                Color: =VarTheme.InputTextDark
                Font: =VarTheme.Font
                FontWeight: =FontWeight.Bold
                Size: =16
                Text: |-
                    ="Total:"
                Width: =80
                X: =435
                Y: =10
                ZIndex: =1

            LblCount As label:
                Color: =VarTheme.InputTextDark
                Font: =VarTheme.Font
                FontWeight: =FontWeight.Bold
                Size: =16
                Text: =CountRows(GalAppointment.AllItems)
                X: =527
                Y: =10
                ZIndex: =2

    CnvFindApptHeader As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =VarTheme.HeaderSize
        Width: =Parent.Width
        Y: =
        ZIndex: =3

        DcFindApptHeader As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =VarTheme.HeaderSize
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            LblFindAppointmentHeader As label:
                Font: =VarTheme.Font
                FontWeight: =FontWeight.Bold
                Size: =24
                Text: ="Find Appointments"
                Width: =328
                X: =90
                Y: =30
                ZIndex: =7

            ImgBackFindAppointment As image:
                Height: =40
                Image: |-
                    ="data:image/svg+xml;utf8, "&EncodeUrl("<svg width='28' height='28' viewBox='0 0 28 28' fill='none' xmlns='http://www.w3.org/2000/svg'> <path d='M14 28C10.287 28 6.72602 26.525 4.10051 23.8995C1.475 21.274 3.04044e-06 17.713 3.20274e-06 14C3.36504e-06 10.287 1.475 6.72601 4.10051 4.1005C6.72602 1.475 10.287 -7.74261e-07 14 -6.11959e-07C17.713 -4.49658e-07 21.274 1.475 23.8995 4.10051C26.525 6.72601 28 10.287 28 14C28 17.713 26.525 21.274 23.8995 23.8995C21.274 26.525 17.713 28 14 28ZM20.125 14.875C20.3571 14.875 20.5796 14.7828 20.7437 14.6187C20.9078 14.4546 21 14.2321 21 14C21 13.7679 20.9078 13.5454 20.7437 13.3813C20.5796 13.2172 20.3571 13.125 20.125 13.125L9.98725 13.125L13.7445 9.3695C13.9088 9.2052 14.0011 8.98236 14.0011 8.75C14.0011 8.51764 13.9088 8.2948 13.7445 8.1305C13.5802 7.9662 13.3574 7.87389 13.125 7.87389C12.8926 7.87389 12.6698 7.9662 12.5055 8.1305L7.2555 13.3805C7.17402 13.4618 7.10937 13.5583 7.06526 13.6646C7.02114 13.7709 6.99844 13.8849 6.99844 14C6.99844 14.1151 7.02114 14.2291 7.06526 14.3354C7.10937 14.4417 7.17402 14.5382 7.2555 14.6195L12.5055 19.8695C12.6698 20.0338 12.8926 20.1261 13.125 20.1261C13.3574 20.1261 13.5802 20.0338 13.7445 19.8695C13.9088 19.7052 14.0011 19.4824 14.0011 19.25C14.0011 19.0176 13.9088 18.7948 13.7445 18.6305L9.98725 14.875L20.125 14.875Z' fill='#0052CC'/> </svg> ")
                OnSelect: =Navigate(ScnLanding);
                Width: =40
                X: =28
                Y: =32
                ZIndex: =8

            GrpSearchAppointment As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =9

                TxtFindApptSearch As text:
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Default: =""
                    DelayOutput: =true
                    Fill: =VarTheme.InputBackground
                    Font: =VarTheme.Font
                    Height: =52
                    HintText: ="Search appointments by Name, phone number, confirma..."
                    OnChange: |-
                        =UpdateContext({locSearchValue: TxtFindApptSearch.Text});
                        
                        
                        Set(
                            VarViewAllFindAppointmentRecords,
                            true
                        );
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: ="Search appointments by Name, phone number, confirmation number"
                    Width: =558
                    X: =442
                    Y: =28
                    ZIndex: =2

                IcoApptClearSearch As icon.Cancel:
                    Color: =RGBA(102, 113, 166, 1)
                    Height: =30
                    Icon: =Icon.Cancel
                    OnSelect: |-
                        =Reset(TxtFindApptSearch);
                        UpdateContext({locSearchValue: ""});
                        Set(VarViewAllFindAppointmentRecords,true);
                        /*If(
                            ChkTodayAppt.Value = true,
                        
                        Set(
                            VarTotalCount,
                            (CountIf(
                             'Appointments (EMR)',
                                            ((IsBlank(CmbFindApptStatus.Selected.Value) || IsEmpty(CmbFindApptStatus.Selected.Value) || 'Appointment Status' = CmbFindApptStatus.Selected.Value) && (IsBlank(CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') || IsEmpty(CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') || 'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)' = CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') && (IsBlank(CmbFindApptLocation.Selected.Location) || IsEmpty(CmbFindApptLocation.Selected.Location) || Location.Location = CmbFindApptLocation.Selected.Location) && (IsBlank(locSearchValue) || IsEmpty(locSearchValue) || StartsWith(
                                                Patient.'Full Name',
                                                locSearchValue
                                            ) || StartsWith(
                                                Patient.'Mobile Phone',
                                                locSearchValue
                                            ) || StartsWith(
                                                Patient.'Confirmation Code',
                                                locSearchValue
                                            )) && ('Appointment Date Time' >= Today() && 'Appointment Date Time' <= DateAdd(
                                                Today(),
                                                1,
                                                Days
                                            )))
                            ) )),
                        Set(
                            VarTotalCount,
                            (CountIf(
                                'Appointments (EMR)',
                                            ((IsBlank(CmbFindApptStatus.Selected.Value) || IsEmpty(CmbFindApptStatus.Selected.Value) || 'Appointment Status' = CmbFindApptStatus.Selected.Value) && (IsBlank(CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') || IsEmpty(CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') || 'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)' = CmbFindApptService.Selected.'Healthcare Service (msemr_healthcareserviceid)') && (IsBlank(CmbFindApptLocation.Selected.Location) || IsEmpty(CmbFindApptLocation.Selected.Location) || Location.Location = CmbFindApptLocation.Selected.Location) && (IsBlank(locSearchValue) || IsEmpty(locSearchValue) || StartsWith(
                                                Patient.'Full Name',
                                                locSearchValue
                                            ) || EndsWith(
                                                Patient.'Full Name',
                                                locSearchValue
                                            ) || StartsWith(
                                                Patient.'Mobile Phone',
                                                locSearchValue
                                            ) || StartsWith(
                                                Patient.'Confirmation Code',
                                                locSearchValue
                                            )) && VarViewAllFindAppointmentRecords = true)
                            )
                            )
                        )
                        )
                        */
                    Width: =37
                    X: =900
                    Y: =39
                    ZIndex: =4

                BtnSearchAppt As button:
                    BorderThickness: =0
                    DisabledFill: =VarTheme.PrimaryColor
                    Fill: =VarTheme.PrimaryColor
                    Font: =Font.Lato
                    Height: =44
                    HoverColor: =VarTheme.PrimaryColorDark
                    OnSelect: |-
                        =UpdateContext({locSearchValue: TxtFindApptSearch.Text});
                        
                        
                        Set(
                            VarViewAllFindAppointmentRecords,
                            true
                        );
                    PressedColor: =VarTheme.PrimaryColor
                    PressedFill: =VarTheme.PrimaryColor
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Text: =""
                    Width: =44
                    X: =949
                    Y: =32
                    ZIndex: =5

                IcoFindApptSeatch As icon.Search:
                    Color: =RGBA(255, 255, 255, 1)
                    Height: =25
                    Icon: =Icon.Search
                    OnSelect: |-
                        =UpdateContext({locSearchValue: TxtFindApptSearch.Text});
                        
                        
                        Set(
                            VarViewAllFindAppointmentRecords,
                            true
                        );
                    Width: =25
                    X: =958
                    Y: =42
                    ZIndex: =6

    NoRecordFindAppointment As NoRecordFoundComponent:
        Icon: |-
            ="data:image/svg+xml;utf8, "&EncodeUrl("<svg width='104' height='104' viewBox='0 0 104 104' fill='none' xmlns='http://www.w3.org/2000/svg'> <path d='M76.5 9H72V4.5C72 1.8 70.2 0 67.5 0C64.8 0 63 1.8 63 4.5V9H27V4.5C27 1.8 25.2 0 22.5 0C19.8 0 18 1.8 18 4.5V9H13.5C5.85 9 0 14.85 0 22.5V27H90V22.5C90 14.85 84.15 9 76.5 9ZM0 76.5C0 84.15 5.85 90 13.5 90H76.5C84.15 90 90 84.15 90 76.5V36H0V76.5ZM67.5 45C70.2 45 72 46.8 72 49.5C72 52.2 70.2 54 67.5 54C64.8 54 63 52.2 63 49.5C63 46.8 64.8 45 67.5 45ZM67.5 63C70.2 63 72 64.8 72 67.5C72 70.2 70.2 72 67.5 72C64.8 72 63 70.2 63 67.5C63 64.8 64.8 63 67.5 63ZM45 45C47.7 45 49.5 46.8 49.5 49.5C49.5 52.2 47.7 54 45 54C42.3 54 40.5 52.2 40.5 49.5C40.5 46.8 42.3 45 45 45ZM45 63C47.7 63 49.5 64.8 49.5 67.5C49.5 70.2 47.7 72 45 72C42.3 72 40.5 70.2 40.5 67.5C40.5 64.8 42.3 63 45 63ZM22.5 45C25.2 45 27 46.8 27 49.5C27 52.2 25.2 54 22.5 54C19.8 54 18 52.2 18 49.5C18 46.8 19.8 45 22.5 45ZM22.5 63C25.2 63 27 64.8 27 67.5C27 70.2 25.2 72 22.5 72C19.8 72 18 70.2 18 67.5C18 64.8 19.8 63 22.5 63Z' fill='#0863D1'/> <circle cx='87.321' cy='87.321' r='15.321' fill='#0863D1' stroke='white' stroke-width='2'/> <path d='M82 81.7896L93.3345 93.1241' stroke='#F3F3F4' stroke-width='4.1288' stroke-linecap='round'/> <path d='M93.334 81.7896L81.9995 93.1241' stroke='#F3F3F4' stroke-width='4.1288' stroke-linecap='round'/> </svg> ")
        Subtitle: ="Please enter correct information to search above or apply filters to find appointment data."
        Title: ="No appointments found"
        Visible: |-
            =//CountRows(GalAppointment.AllItems)=0
            false
        X: =142
        Y: =575
        ZIndex: =6

    ConTestReportFindAppt As groupContainer.manualLayoutContainer:
        Height: =Parent.Height
        Visible: =VarTestResultPopUpFind
        Width: =Parent.Width
        ZIndex: =7

        BgTestReportFindAppt As rectangle:
            Fill: =RGBA(0, 0, 0, 0.37)
            Height: =Parent.Height
            OnSelect: |-
                =Set(VarTestResultPopUpFind,false);
                Set(VarPopUpTestResultFind,false);
            Width: =Parent.Width
            ZIndex: =1

        TestReportComponentFindAppt As TestReportComponent:
            DisplayFields: |-
                =Table(
                    {
                        PatientName: gblSelectedPatient.'Full Name',
                        TestingFacility: gblSelectedAppointmentPatient.'Testing Facility'.Name,
                        TestDevice: gblSelectedAppointmentPatient.'Test Device'.'Test Model Name',
                        TestPerformedName: gblSelectedAppointmentPatient.'Performed Test Name'.'Test Performed Name',
                        SpecimentCollectedOn: DateTimeValue(gblSelectedAppointmentPatient.'Specimen Collected On',"mm/dd//yyyy"),
                        TestDate: DateTimeValue(gblSelectedAppointmentPatient.'Test Reported On',"mm/dd//yyyy"),
                        TestResult: gblSelectedAppointmentPatient.'Test Result',
                        TestResultDate: gblSelectedAppointmentPatient.'Test Result Date'
                    }
                )
            OnClose: |-
                =Set(VarTestResultPopUpFind,false);
                Set(VarPopUpTestResultFind,false);
            OnSave: |
                =If(
                    !IsBlank(gblSelectedAppointmentPatient.'Test Result'),
                    UpdateContext({varReasonForUnlockFindAppt: true}) && Set(
                        VarTestResultPopUpFind,
                        false
                    ),
                    Patch(
                        'Appointments (EMR)',
                        gblSelectedAppointmentPatient,
                        {
                            'Test Result': Switch(
                                Self.TestResult,
                                "Positive",
                                'Test Result'.Positive,
                                "Negative",
                                'Test Result'.Negative,
                                "Inconclusive",
                                'Test Result'.Inconclusive
                            ),
                            'Test Result Date': Self.TestDate,
                            'Update In': "Staff" & Switch(
                                Self.TestResult,
                                "Positive",
                                'Test Result'.Positive,
                                "Negative",
                                'Test Result'.Negative,
                                "Inconclusive",
                                'Test Result'.Inconclusive
                            )
                        }
                    );
                     Set(
                        VarTestResultPopUpFind,
                        false
                    );
                    
                );
            Visible: =VarTestResultPopUpFind
            ZIndex: =2

        NoticeOfDataIntegrityFindAppt As NoticeOfDataIntegrity:
            OnCancel: |-
                =UpdateContext({varReasonForUnlockFindAppt:false});
                Set(VarTestResultPopUpFind,false);
                Set(VarPopUpTestResultFind,false);
            OnClose: |-
                =UpdateContext({varReasonForUnlockFindAppt:false});
                Set(VarTestResultPopUpFind,false);
                Set(VarPopUpTestResultFind,false);
            OnUnlockEdit: |-
                =Patch(
                    'Appointments (EMR)',
                    gblSelectedAppointmentPatient,
                    {
                        'Test Result': Switch(
                            TestReportComponentFindAppt.TestResult,
                            "Positive",
                            'Test Result'.Positive,
                            "Negative",
                            'Test Result'.Negative,
                            "Inconclusive",
                            'Test Result'.Inconclusive
                        ),
                        'Test Result Date': TestReportComponentFindAppt.TestDate,
                        'Update In': "Staff" & Switch(
                            TestReportComponentFindAppt.TestResult,
                            "Positive",
                            'Test Result'.Positive,
                            "Negative",
                            'Test Result'.Negative,
                            "Inconclusive",
                            'Test Result'.Inconclusive
                        ),
                        'Reason for Unlock Test Result': NoticeOfDataIntegrityFindAppt.ReasonForEnablingEditing
                    }
                );
                Set(
                    VarTestResultPopUpFind,
                    false
                );
                UpdateContext({varReasonForUnlockFindAppt: false});
            SubmitButtonName: ="Confirm and Save"
            Visible: =varReasonForUnlockFindAppt
            X: =195
            Y: =235
            ZIndex: =3

