CalendarComponent_1 As CanvasComponent:
    AllowSelectionOfWeekends: =true
    BorderRadius: =0
    CalendarItems: |-
        =Table(
            {
                Date: "11/3/2020",
                Title: "Meeting",
                Time: "1:30pm"
            },
             {
                Date: "11/3/2020",
                Title: "Power Apps Training",
                Time: "3:00pm"
            },
            {
                Date: "11/26/2020",
                Title: "Thanksgiving Day",
                Time: "All Day"
            },
             {
                Date: "11/27/2020",
                Title: "Thanksgiving Day",
                Time: "All Day"
            }
        )
    Color: =RGBA(0, 0, 0, 1)
    DefaultEndDate: =Now()
    DefaultStartDate: =Now()
    EndDate: =_selectedEnd
    Fill: =RGBA(0, 0, 0, 0)
    Height: =640
    OnReset: =Set(visible_variable, true)
    SelectedDateColor: =Color.White
    SelectedDateFill: =Color.Red
    SelectRange: =false
    ShowCalendar: =visible_variable
    ShowCalendarEvents: =true
    ShowCloseIcon: =true
    ShowLongWeekday: =true
    StartDate: =_selectedStart
    StartWeekOnMonday: =false
    Width: =500
    X: =0
    Y: =0
    ZIndex: =3

    galWeekdays_2 As gallery.galleryHorizontal:
        BorderColor: =RGBA(255, 255, 255, 1)
        BorderStyle: =BorderStyle.None
        DisabledBorderColor: =galWeekdays_2.BorderColor
        DisabledFill: =galWeekdays_2.Fill
        Fill: =RGBA(255, 255, 255, 1)
        Height: =41
        HoverBorderColor: =galWeekdays_2.BorderColor
        HoverFill: =galWeekdays_2.Fill
        Items: |-
            =Switch(CalendarComponent_1.ShowLongWeekday,
            true,
            If(
                CalendarComponent_1.StartWeekOnMonday = false,
                [
                    "M",
                    "T",
                    "W",
                    "T",
                    "F",
                    "S",
                    "S"
                ],
                [
                    "M",
                    "T",
                    "W",
                    "T",
                    "F",
                    "S",
                    "S"
                ]
            ),
            If(
                CalendarComponent_1.StartWeekOnMonday = false,
                [
                    "S",
                    "M",
                    "T",
                    "W",
                    "T",
                    "F",
                    "S",
                ],
                [
                    "M",
                    "T",
                    "W",
                    "T",
                    "F",
                    "S",
                    "S"
                ]
            ))
        PressedBorderColor: =galWeekdays_2.BorderColor
        PressedFill: =galWeekdays_2.Fill
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =60
        Width: =420
        Y: =64
        ZIndex: =1

        lblWeekday_3 As label:
            Align: =Align.Center
            BorderColor: =RGBA(0,0,0,0)
            BorderStyle: =BorderStyle.None
            Color: |-
                =ColorValue("#212121")
            DisabledBorderColor: =RGBA(0,0,0,0)
            DisabledColor: |-
                =ColorValue("#A7A7A7")
            Fill: =RGBA(255, 255, 255, 1)
            FocusedBorderColor: =RGBA(0,0,0,0)
            Font: =Font.Lato
            FontWeight: =FontWeight.Bold
            Height: =41
            HoverBorderColor: =RGBA(0,0,0,0)
            HoverColor: =
            HoverFill: =RGBA(0,0,0,0)
            OnSelect: =Select(Parent)
            PressedBorderColor: =RGBA(0,0,0,0)
            PressedColor: |-
                =ColorValue("#A7A7A7")
            PressedFill: =RGBA(0,0,0,0)
            Size: =14
            Text: =ThisItem.Value
            Width: =59
            ZIndex: =1

    tmrInitialize_3 As timer:
        AutoStart: =IsBlank(_today)
        BorderColor: =RGBA(0, 120, 212, 1)
        BorderStyle: =BorderStyle.None
        DisabledBorderColor: =RGBA(244, 244, 244, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Fill: =RGBA(0, 120, 212, 1)
        FocusedBorderColor: =tmrInitialize_3.BorderColor
        Font: =Font.'Segoe UI'
        HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -10%)
        HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
        OnTimerStart: |-
            =Set(
                _today,
                Today()
            );
            /* if default dates are provided, set to inputs, otherwise set to today */
            Set(
                _selectedStart,
                If(
                    !IsBlank(CalendarComponent_1.DefaultStartDate),
                    CalendarComponent_1.DefaultStartDate,
                    _today
                )
            );
            Set(
                _selectedEnd,
                If(
                    !IsBlank(CalendarComponent_1.DefaultEndDate) && CalendarComponent_1.DefaultEndDate > _selectedStart,
                    CalendarComponent_1.DefaultEndDate,
                    Blank()
                )
            );
            If(
                CalendarComponent_1.StartWeekOnMonday = false,
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _selectedStart,
                        1 - Day(_selectedStart),
                        TimeUnit.Days
                    )
                ),
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _firstDayOfMonth,
                        -(Mod(
                            Weekday(_firstDayOfMonth) - 3,
                            7
                        ) + 1),
                        TimeUnit.Days
                    )
                )
            );
            Set(
                _firstDayInView,
              DateAdd(_firstDayOfMonth,-(Mod(Weekday(_firstDayOfMonth)-3,7)+1),TimeUnit.Days)
            )
        PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        Text: |-
            =Text(Time(0, 0, tmrInitialize_3.Value/1000), "hh:mm:ss")
        Visible: =false
        Y: =446
        ZIndex: =2

    lblMonthYear_2 As label:
        Color: =RGBA(9, 30, 66, 1)
        FocusedBorderColor: =lblMonthYear_2.BorderColor
        Font: =Font.Lato
        FontWeight: =FontWeight.Semibold
        Height: =31
        HoverBorderColor: =lblMonthYear_2.BorderColor
        HoverColor: =lblMonthYear_2.Color
        HoverFill: =lblMonthYear_2.Fill
        PaddingLeft: =15
        PressedBorderColor: =lblMonthYear_2.BorderColor
        PressedColor: =lblMonthYear_2.Color
        PressedFill: =lblMonthYear_2.Fill
        Size: =16
        Text: |-
            =If(
                IsBlank(_today),
                Text(
                    Now(),
                    "[$-en-US]mmmm"
                ) & " " & Text(
                    Now(),
                    "[$-en-US]yyyy"
                ),
                Text(
                    _firstDayOfMonth,
                    "[$-en-US]mmmm"
                ) & " " & Text(
                    _firstDayOfMonth,
                    "[$-en-US]yyyy"
                )
            )
        Width: =192
        X: =48
        Y: =17
        ZIndex: =3

    Circle2_3 As circle:
        Fill: =RGBA(0, 82, 204, 1)
        Height: =45
        Width: =45
        X: =2
        Y: =10
        ZIndex: =4

    btnPrevMonth_2 As icon.ChevronLeft:
        BorderColor: =RGBA(166, 166, 166, 1)
        Color: =Color.White
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(220, 220, 220, 1)
        DisabledFill: =RGBA(0, 0, 0, 0)
        FocusedBorderColor: =btnPrevMonth_2.BorderColor
        FocusedBorderThickness: =4
        Height: =36
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =Color.White
        HoverFill: =RGBA(0, 0, 0, 0)
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =If(CalendarComponent_1.StartWeekOnMonday = false, Set(
                _firstDayOfMonth,
                DateAdd(
                    _firstDayOfMonth,
                    -1,
                    TimeUnit.Months
                )
            );
            Set(
                _firstDayInView,
                DateAdd(
                    _firstDayOfMonth,
                    -(Mod(
                        Weekday(_firstDayOfMonth) - 2,
                        7
                    ) + 0),
                    TimeUnit.Days
                )
            ),
            Set(
                _firstDayOfMonth,
                DateAdd(
                    _firstDayOfMonth,
                    -1,
                    TimeUnit.Months
                )
            );
            Set(
                _firstDayInView,
               DateAdd(_firstDayOfMonth,-(Mod(Weekday(_firstDayOfMonth)-3,7)+0),TimeUnit.Days)
            ))
        PaddingBottom: |
            =7
        PaddingTop: =7 
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        PressedFill: =RGBA(0, 0, 0, 0)
        Width: =46
        Y: =15
        ZIndex: =5

    Circle2_2 As circle:
        Fill: =RGBA(0, 82, 204, 1)
        Height: =45
        Width: =45
        X: =325
        Y: =8
        ZIndex: =6

    btnNextMonth_2 As icon.ChevronRight:
        BorderColor: =RGBA(50, 86, 160, 1)
        Color: =btnPrevMonth_2.Color
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(220, 220, 220, 1)
        DisabledFill: =RGBA(0, 0, 0, 0)
        FocusedBorderColor: =btnNextMonth_2.BorderColor
        FocusedBorderThickness: =4
        Height: =36
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =Color.White
        HoverFill: =RGBA(0, 0, 0, 0)
        Icon: =Icon.ChevronRight
        OnSelect: |
            =Switch(
                CalendarComponent_1.StartWeekOnMonday,
                false,
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _firstDayOfMonth,
                        1,
                        TimeUnit.Months
                    )
                );
                Set(
                    _firstDayInView,
                    DateAdd(
                        _firstDayOfMonth,
                        -(Mod(
                            Weekday(_firstDayOfMonth) - 2,
                            7
                        ) + 0),
                        TimeUnit.Days
                    )
                ),
                Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _firstDayOfMonth,
                        1,
                        TimeUnit.Months
                    )
                );
                Set(
                    _firstDayInView, 
                 DateAdd(_firstDayOfMonth,-(Mod(Weekday(_firstDayOfMonth)-3,7)+0),TimeUnit.Days)
                )
            );
        PaddingBottom: |
            =7
        PaddingTop: =7
        PressedBorderColor: =RGBA(0, 0, 0, 0)
        PressedColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        PressedFill: =RGBA(0, 0, 0, 0)
        Width: =48
        X: =325
        Y: =12
        ZIndex: =7

    btnToday_2 As button:
        Color: |-
            =
            RGBA(0, 82, 204, 1)
        Fill: =RGBA(0, 0, 0, 0)
        Font: =Font.Lato
        Height: =31
        HoverColor: =Self.Color
        HoverFill: =Self.Fill
        OnSelect: |-
            =Set(
                _today,
                Today()
            );
            If(
                CalendarComponent_1.StartWeekOnMonday = false,
                   Set(
                    _firstDayOfMonth,
                    DateAdd(
                        _today,
                        1 - Day(_today),
                        TimeUnit.Days
                    )
                );
                Set(
                    _firstDayInView,
                    DateAdd(
                        _firstDayOfMonth,
                        -(Mod(
                            Weekday(_firstDayOfMonth) - 2,
                            7
                        ) + 0),
                        TimeUnit.Days
                    )
                )
                
            );
            Set(
                _selectedStart,
                Blank()
            );
            Set(
                _selectedEnd,
                Blank()
            )
        PressedColor: =RGBA(0, 0, 0, 1)
        PressedFill: =
        Size: =16
        Text: ="Today"
        Width: =111
        X: =214
        Y: =15
        ZIndex: =8

    galCalendar_2 As gallery.galleryVertical:
        BorderColor: =RGBA(230, 230, 230, 1)
        DisabledBorderColor: =galCalendar_2.BorderColor
        DisabledFill: =galCalendar_2.Fill
        Fill: |-
            =//If(
                /* transparent before initialized */
            //    IsBlank(_today), 
             //       RGBA(0,0,0,1),
                /* range enabled and date is start or end */
             //   DateAdd(_firstDayInView,galCalendar_1.Value,Days)=_selectedStart ||
             //   (CalendarComponent.SelectRange && (DateAdd(_firstDayInView,ThisItem.Value,Days) > _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,Days) <= _selectedEnd)),
             //      CalendarComponent.SelectedDateColor,
                /* color of dates that share the same month*/
              //  Month(DateAdd(_firstDayInView,ThisItem.Value,Days)) = Month(_firstDayOfMonth),
             //       CalendarComponent.Color,
                /* default text color */
              //  Gray
            //)
            Color.White
        Height: =291
        HoverBorderColor: =galCalendar_2.BorderColor
        HoverFill: =galCalendar_2.Fill
        Items: |-
            =[  0, 1, 2, 3, 4, 5, 6,
               7, 8, 9,10,11,12,13,
              14,15,16,17,18,19,20,
              21,22,23,24,25,26,27,
              28,29,30,31,32,33,34,
              35,36,37,38,39,40,41]
        Layout: =Layout.Vertical
        PressedBorderColor: =galCalendar_2.BorderColor
        PressedFill: =galCalendar_2.Fill
        ShowScrollbar: =false
        TemplatePadding: |
            =0
        TemplateSize: =59
        Width: =420
        WrapCount: =7
        Y: =109
        ZIndex: =9

        Rectangle2_20 As rectangle:
            BorderColor: =RGBA(230, 230, 230, 1)
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =62
            OnSelect: =Select(Parent)
            Width: =62
            ZIndex: =1

        icnToday_1 As circle:
            BorderColor: =RGBA(130, 144, 156, 1)
            BorderStyle: =BorderStyle.None
            DisabledFill: =icnToday_1.Fill
            Fill: |-
                =If(
                    /* transparent if calender is not initialized yet */
                    IsBlank(_today), 
                        RGBA(0,0,0,0),
                        
                    /* else set to input property SelectedDateFill */
                    !IsBlank(CalendarComponent_1.SelectedDateFill),
                        ColorFade(CalendarComponent_1.SelectedDateFill,-10%),
                
                    /* else default to theme fill */
                    ColorFade(tmrInitialize_3.Fill,-10%)
                )
            FocusedBorderColor: =icnToday_1.BorderColor
            FocusedBorderThickness: =0
            Height: =62
            HoverFill: =icnToday_1.Fill
            OnSelect: =Select(Parent)
            PressedFill: =icnToday_1.Fill
            Visible: |-
                =DateAdd(
                        _firstDayInView,
                        ThisItem.Value,
                        TimeUnit.Days
                    ) = _today
            Width: =62
            ZIndex: =2

        btnDayValue_1 As button:
            BorderColor: =ColorFade(btnDayValue_1.Fill, -15%)
            BorderThickness: =0
            Color: |-
                =If(
                    /* transparent before initialized */
                    IsBlank(_today), 
                        RGBA(0,0,0,1),
                    /* range enabled and date is start or end */
                    DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)=_selectedStart ||
                    (CalendarComponent_1.SelectRange && (DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) > _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) <= _selectedEnd)),
                       CalendarComponent_1.SelectedDateColor,
                    /* color of dates that share the same month*/
                    Month(DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days)) = Month(_firstDayOfMonth),
                        CalendarComponent_1.Color,
                    /* default text color */
                    Color.Gray
                )
            DisabledBorderColor: =ColorFade(btnDayValue_1.BorderColor, 70%)
            DisabledColor: =ColorFade(RGBA(47, 41, 43, 1), 70%)
            DisabledFill: =RGBA(204, 204, 204, 1)
            DisplayMode: |-
                =If(
                    CalendarComponent_1.AllowSelectionOfWeekends = true,
                    DisplayMode.Edit,
                    Switch(CalendarComponent_1.StartWeekOnMonday,false,
                    If(
                        Weekday(
                            DateAdd(
                                _firstDayInView,
                                ThisItem.Value,
                                TimeUnit.Days
                            ),
                            StartOfWeek.Sunday
                        ) = 1 || Weekday(
                            DateAdd(
                                _firstDayInView,
                                ThisItem.Value,
                                TimeUnit.Days
                            ),
                            StartOfWeek.Sunday
                        ) = 7,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    ),
                     If(
                        Weekday(
                            DateAdd(
                                _firstDayInView,
                                ThisItem.Value,
                                TimeUnit.Days
                            ),
                            StartOfWeek.Monday
                        ) = 6 || Weekday(
                            DateAdd(
                                _firstDayInView,
                                ThisItem.Value,
                                TimeUnit.Days
                            ),
                            StartOfWeek.Monday
                        ) = 7,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                    )
                )
            Fill: |-
                =If(
                    /* transparent before initialized */
                    IsBlank(_today),
                        RGBA(0,0,0,0),
                
                    /* when range off, only show start date */
                    DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart 
                    || (CalendarComponent_1.SelectRange && (DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) >= _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) <=_selectedEnd)),
                        CalendarComponent_1.SelectedDateFill 
                    /* transparent by default */
                    ,RGBA(0,0,0,0)
                )
            FocusedBorderColor: =btnDayValue_1.BorderColor
            FocusedBorderThickness: =0
            Font: =Font.Lato
            FontWeight: =FontWeight.Normal
            Height: =62
            HoverBorderColor: =ColorFade(btnDayValue_1.BorderColor, 20%)
            HoverColor: =btnDayValue_1.Color
            HoverFill: =ColorFade(btnDayValue_1.Fill, -10%)
            OnSelect: |-
                =Set(
                    _selectedDate,   
                 DateAdd(
                            _firstDayInView,
                            ThisItem.Value,
                            TimeUnit.Days
                        )
                );
                If(
                    CalendarComponent_1.SelectRange,
                // choose end
                    If(
                        !IsBlank(_selectedStart) && IsBlank(_selectedEnd) && _selectedDate >= _selectedStart,
                        Set(
                            _selectedEnd,
                            _selectedDate
                        ),
                // default: set start if empty or resetting
                        Set(
                            _selectedStart,
                            _selectedDate
                        );
                        Set(
                            _selectedEnd,
                            Blank()
                        )
                    ),
                    Set(
                        _selectedStart,
                        _selectedDate
                    );
                    Set(
                        _selectedEnd,
                        Blank()
                    )
                )
            PressedBorderColor: =btnDayValue_1.Fill
            PressedColor: =RGBA(0, 0, 0, 1)
            PressedFill: =RGBA(0, 82, 204, 1)
            RadiusBottomLeft: =btnDayValue_1.RadiusTopLeft
            RadiusBottomRight: =btnDayValue_1.RadiusTopRight
            RadiusTopLeft: |-
                =If(
                    /* input radius if dates are the same */
                    _selectedStart = _selectedEnd || DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart, 
                        CalendarComponent_1.BorderRadius,
                    /* square if end date or between start and end*/
                    CalendarComponent_1.SelectRange && (DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) > _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) <= _selectedEnd), 
                        0,
                    /* default radius */
                    CalendarComponent_1.BorderRadius
                )
            RadiusTopRight: |-
                =If(
                    /* input radius for single date mode, or if in range mode the selected end */
                    (_selectedStart = _selectedEnd || !CalendarComponent_1.SelectRange) || (CalendarComponent_1.SelectRange && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedEnd), 
                        CalendarComponent_1.BorderRadius,
                    /* square if in range mode and the start date or in between start and end date */
                    CalendarComponent_1.SelectRange && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) = _selectedStart && !IsBlank(_selectedEnd) 
                    || (DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) > _selectedStart && DateAdd(_firstDayInView,ThisItem.Value,TimeUnit.Days) < _selectedEnd), 
                        0,
                    /* default radius */
                   CalendarComponent_1.BorderRadius
                ) 
            Size: =16
            Text: |-
                =If(
                    IsBlank(_today),
                    ThisItem.Value,
                     Day(
                        DateAdd(
                            _firstDayInView,
                            ThisItem.Value,
                            TimeUnit.Days
                        )
                    )
                   
                )
            Width: =62
            ZIndex: =4

        icnEvent_1 As circle:
            BorderColor: =RGBA(130, 144, 156, 1)
            BorderStyle: =BorderStyle.None
            DisabledFill: =RGBA(0, 82, 204, 1)
            Fill: |-
                =If(
                    /* transparent if calender is not initialized yet */
                    IsBlank(_today), 
                        RGBA(0,0,0,0),
                        
                    /* else set to input property SelectedDateFill */
                    !IsBlank(CalendarComponent_1.SelectedDateFill),
                        RGBA(0, 82, 204, 1),
                
                    /* else default to theme fill */
                    RGBA(0, 82, 204, 1)
                )
            FocusedBorderColor: =icnEvent_1.BorderColor
            FocusedBorderThickness: =0
            Height: =9
            HoverFill: =RGBA(0, 82, 204, 1)
            OnSelect: =Select(Parent)
            PressedFill: =RGBA(0, 82, 204, 1)
            Visible: |-
                =If(
                    CalendarComponent_1.ShowCalendarEvents = false,
                    DateAdd(
                        _firstDayInView,
                        ThisItem.Value,
                        TimeUnit.Days
                    ) = _today,
                    If(
                   CountRows(
                    Filter(
                        CalendarComponent_1.CalendarItems,
                        DateValue(Text(Date)) = DateAdd(
                            _firstDayInView,
                            ThisItem.Value,
                            TimeUnit.Days
                        )
                    )
                ) > 0, true,false)
                )
            Width: =10
            X: =26
            Y: =47
            ZIndex: =5

    galCalItems_1 As gallery.variableTemplateHeightGallery:
        BorderColor: =RGBA(255, 255, 255, 1)
        Height: =154
        Items: =Filter(CalendarComponent_1.CalendarItems,DateValue(Date) = CalendarComponent_1.StartDate)
        Layout: =Layout.Vertical
        TemplateSize: =43
        Visible: =CalendarComponent_1.ShowCalendarEvents
        Width: =445
        Y: =486
        ZIndex: =10

        lblEventName_1 As label:
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            Size: =16
            Text: =ThisItem.Title
            Width: =404
            X: =31
            ZIndex: =1

        lblEventTime_1 As label:
            Font: =Font.'Segoe UI'
            OnSelect: =Select(Parent)
            Text: =ThisItem.Time
            Width: =145
            X: =290
            ZIndex: =2

        Rectangle1_3 As rectangle:
            Fill: =RGBA(128, 128, 128, 1)
            Height: =40
            OnSelect: =Select(Parent)
            Width: =8
            X: =9
            ZIndex: =3

