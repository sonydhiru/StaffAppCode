"ScnLanding As screen.'tabletAutoLayout_HeaderMainFooter_ver1.0'":
    OnVisible: |
        =//Testing AppointmentStatus
        UpdateContext({locAppointmentStatus:'Appointment Status'});
        
        UpdateContext({locnextapppointment:Blank()});
        
        //Setting default duration for calendar slots
        Set(
            VarDefaultDuration,
            CmbDefaultDuration.Selected.Value
        );
        
        //Collecting SOAP notes that are in progress start
        Clear(colSOAPInProgressHome);
        ForAll(
            Filter('SOAP Notes','SOAP Status'='SOAP Progress'.'In Progress'),
            Collect(colSOAPInProgressHome,
            ThisRecord.Encounter.Activity)
        );
        
        Clear(soapItemsHome);
        ClearCollect(
            soapItemsHome,
            AddColumns(
                Filter(
                    'Appointments (EMR)',
                    Activity in colInProgressAppointment && ('Appointment Status'=locAppointmentStatus.Fulfilled || 'Appointment Status'=locAppointmentStatus.Booked || 'Appointment Status'=locAppointmentStatus.'Checked-In')
                ),
                "apptid",
                Activity
            )
        );
        ClearCollect(
            soapItemsValueHome,
            ShowColumns(
                soapItemsHome,
                "apptid"
            )
        );
        //Collecting SOAP notes that are in progress end
        
        //Collecting locations
        Clear(LocationDdList);
        Clear(LocationItems);
        ClearCollect(
            LocationDdList,
            AddColumns(
                Filter(Locations,true),
                "LocationName",
                Name,
                 "LocationID",
                  Location
            )
        );
        Collect(LocationItems,Table({LocationName: "All Location", LocationID: Blank()}));
        Collect(
            LocationItems,
            ShowColumns(LocationDdList,
                "LocationName",
                "LocationID"
            )
        );
        //Collecting locations end
        
        Set(
            VarAppColor,
            {
                PrimaryColor: RGBA(
                    0,
                    82,
                    204,
                    1
                ),
                PrimaryColorDark: ColorFade(
                    RGBA(
                        0,
                        82,
                        204,
                        1
                    ),
                    -20%
                ),
                InputBackground: RGBA(
                    243,
                    243,
                    244,
                    1
                ),
                InputText: RGBA(
                    42,
                    42,
                    42,
                    1
                ),
                InputTextDark: RGBA(
                    9,
                    30,
                    66,
                    1
                ),
                InputBackgroundAlternate: RGBA(
                    255,
                    255,
                    255,
                    1
                ),
                PressedBorder: RGBA(
                    255,
                    153,
                    31,
                    1
                ),
                InputNormalHeight: 40,
                InputBigHeight: 52,
                FontWeightBold: FontWeight.Bold,
                FontWeightSemiBold: FontWeight.Semibold,
                FontWeightNormal: FontWeight.Normal,
                FontColorBold: RGBA(
                    9,
                    30,
                    66,
                    1
                ),
                Font: Font.Lato,
                FontSize18: 18,
                FontSize12: 12,
                FontSize16: 16,
                FontSize20: 20,
                FontSize24: 24,
                StatusFulfilled: RGBA(
                    108,
                    170,
                    149,
                    1
                ),
                StatusBooked: RGBA(
                    0,
                    82,
                    204,
                    1
                ),
                StatusCancelled: RGBA(
                    222,
                    53,
                    11,
                    1
                ),
                StatusCheckedIn: RGBA(
                    255,
                    153,
                    31,
                    1
                ),
                CardBorderColor: RGBA(
                    148,
                    148,
                    148,
                    1
                ),
                CardBorderSize: 1,
                BackgrounMain: RGBA(
                    230,
                    239,
                    252,
                    1
                ),
                FooterSize: 149,
                HeaderSize: 109,
                Error: RGBA(
                    218,
                    68,
                    82,
                    1
                )
            }
        );
        Set(
            VarTheme,
            VarAppColor
        );
        Set(
            VarViewAllFindAppointmentRecords,
            false
        );
        Set(
            VarAppsetting,
            First('App Settings')
        );
        Set(
            VarShowPayment,
            VarAppsetting.'Show Payment'
        );
        Set(
            VarOptionsPopUpHome,
            false
        );
        UpdateContext({locActiveTab: 'Appointment Status'.Booked});
        Set(
            VarExistingPatient,
            false
        );
        Refresh('Appointments (EMR)');
        Reset(GalAppointmentHome);

    NoRecordHome As NoRecordFoundComponent:
        Height: =214
        Icon: |-
            ="data:image/svg+xml;utf8, "&EncodeUrl("<svg width='95' height='95' viewBox='0 0 95 95' fill='none' xmlns='http://www.w3.org/2000/svg'>
            <path d='M80.75 9.5H76V4.75C76 1.9 74.1 0 71.25 0C68.4 0 66.5 1.9 66.5 4.75V9.5H28.5V4.75C28.5 1.9 26.6 0 23.75 0C20.9 0 19 1.9 19 4.75V9.5H14.25C6.175 9.5 0 15.675 0 23.75V28.5H95V23.75C95 15.675 88.825 9.5 80.75 9.5ZM0 80.75C0 88.825 6.175 95 14.25 95H80.75C88.825 95 95 88.825 95 80.75V38H0V80.75ZM71.25 47.5C74.1 47.5 76 49.4 76 52.25C76 55.1 74.1 57 71.25 57C68.4 57 66.5 55.1 66.5 52.25C66.5 49.4 68.4 47.5 71.25 47.5ZM71.25 66.5C74.1 66.5 76 68.4 76 71.25C76 74.1 74.1 76 71.25 76C68.4 76 66.5 74.1 66.5 71.25C66.5 68.4 68.4 66.5 71.25 66.5ZM47.5 47.5C50.35 47.5 52.25 49.4 52.25 52.25C52.25 55.1 50.35 57 47.5 57C44.65 57 42.75 55.1 42.75 52.25C42.75 49.4 44.65 47.5 47.5 47.5ZM47.5 66.5C50.35 66.5 52.25 68.4 52.25 71.25C52.25 74.1 50.35 76 47.5 76C44.65 76 42.75 74.1 42.75 71.25C42.75 68.4 44.65 66.5 47.5 66.5ZM23.75 47.5C26.6 47.5 28.5 49.4 28.5 52.25C28.5 55.1 26.6 57 23.75 57C20.9 57 19 55.1 19 52.25C19 49.4 20.9 47.5 23.75 47.5ZM23.75 66.5C26.6 66.5 28.5 68.4 28.5 71.25C28.5 74.1 26.6 76 23.75 76C20.9 76 19 74.1 19 71.25C19 68.4 20.9 66.5 23.75 66.5Z' fill='#0863D1'/>
            </svg>
            ")
        Subtitle: =""
        Title: |-
            =If(
                locActiveTab = 'Appointment Status'.Booked,
                "You don’t have any booked appointments for the day.",
                locActiveTab = 'Appointment Status'.Fulfilled,
                "You don’t have any fulfilled appointments for the day.",
                locActiveTab = 'Appointment Status'.Cancelled,
                "You don’t have any cancelled appointments for the day.",
                locActiveTab = 'Appointment Status'.'Checked-In',
                "You don’t have any checked-in appointments for the day."
            )
        Visible: =CountRows(GalAppointmentHome.AllItems)=0
        Width: =682
        X: =171
        Y: =541

    BottomMenuHome As BottonMenuContainer:
        ActionNeededActiveMenu: =false
        FindAppointmentAction: =ScnFindAppointment
        FindApptActiveMenu: =false
        FindPatientAction: =ScnFindPatient
        FindPatientActiveMenu: =false
        HomeAction: =ScnLanding
        NeededAction: =ScnActionNeeded
        NewAppointmentAction: =ScnNewAppointment
        NewApptActiveMenu: =false
        Width: =Parent.Width
        Y: =Parent.Height-Self.Height
        ZIndex: =3

    ConHomeGallery As groupContainer.manualLayoutContainer:
        Height: =652
        Width: =Parent.Width
        Y: =GalHomeTabs.Y+GalHomeTabs.Height
        ZIndex: =4

        GalAppointmentHome As gallery.galleryVertical:
            Height: =652
            Items: |-
                =SortByColumns(
                    Filter(
                        'Appointments (EMR)',
                        ((IsBlank(locActiveTab) || IsEmpty(locActiveTab) || 'Appointment Status' = locActiveTab) && (IsBlank(LocationComponentHome.SelectedLocationID) || IsEmpty(LocationComponentHome.SelectedLocationID) || Location.Location = GUID(LocationComponentHome.SelectedLocationID)) && 'Appointment Date Time' >= DateAdd(
                            DateComponentHome.SelectedDate,
                            -TimeZoneOffset(),
                            TimeUnit.Minutes
                        ) && 'Appointment Date Time' < DateAdd(
                            DateAdd(
                                DateComponentHome.SelectedDate,
                                -TimeZoneOffset(),
                                TimeUnit.Minutes
                            ),
                            24,
                            TimeUnit.Hours
                        ))
                    ),
                    "smvs_appointmentdatetime",
                    SortOrder.Ascending
                )
                
                /*SortByColumns(
                    Filter(
                        'Appointments (EMR)',
                        ((IsBlank(CmbApptStatusHome.Selected.Value) || IsEmpty(CmbApptStatusHome.Selected.Value) || 'Appointment Status' = CmbApptStatusHome.Selected.Value) && (IsBlank(CmbFindApptLocationHome.Selected.Location) || IsEmpty(CmbFindApptLocationHome.Selected.Location) || Location.Location = CmbFindApptLocationHome.Selected.Location) && 'Appointment Date Time' >= DateAdd(
                            Today(),
                            -TimeZoneOffset(),
                            Minutes
                        ) && 'Appointment Date Time' < DateAdd(
                            DateAdd(
                                Today(),
                                -TimeZoneOffset(),
                                Minutes
                            ),
                            24,
                            Hours
                        ))
                    ),
                    "smvs_appointmentdatetime",
                    Ascending
                )*/
            Layout: =Layout.Vertical
            OnSelect: =
            TemplatePadding: =25
            TemplateSize: =410
            Width: =Parent.Width
            WrapCount: =2
            ZIndex: =2

            HtmlDataCardHome As htmlViewer:
                BorderColor: =RGBA(148, 148, 148, 1)
                BorderStyle: =BorderStyle.Solid
                BorderThickness: =1
                Font: =Font.Lato
                Height: =409
                HtmlText: |-
                    ="<!-- CARDS CONTAINER - ROW -->
                            <div style='width: 100%; display: flex; flex-wrap: wrap; align-items: stretch; box-sizing: border-box;'>
                                <!-- CARD DESIGN -->
                                <div style='width: 100%;overflow:hidden;padding:0px'>
                                    <div style='position: relative;'>
                                        <!-- NEXT ARROW ICON -->
                                        <div style='position: absolute; top: 24px; right: 24px;'>
                                            <svg width='32' height='32' viewBox='0 0 32 32' fill='none' xmlns='http://www.w3.org/2000/svg'>
                    <path d='M17.3333 25.332L26.6666 15.9987L17.3333 6.66536M26.6666 15.9987L5.33329 15.9987' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                    </svg>
                                        </div>
                                        <!-- TOP SECTION -->
                                        <div style='padding: 24px;'>
                                            <!-- PATIENT INFO -->
                                            <div class='patient-info'>
                                                <div style='font-weight: 700; font-size: 26.6px; color: #091E42; margin-bottom: 12px; margin-right: 24px;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;'>" & ThisItem.Patient.'Full Name' & "</div>
                                                <div style='display: flex; margin-bottom: 26px; align-items: center;'>
                                                    <div style='margin-right: 28px; font-size: 18.6px;'><span style='font-weight: 700; color:#091E42'>DOB:</span> <span style='color:#2A2A2A'>" & ThisItem.Patient.Birthday & "</span></div>
                                                    <div style='font-size: 18.6px;'><span style='font-weight: 700; color:#091E42'>Phone:</span> <span style='color:#2A2A2A'>" & ThisItem.Patient.'Mobile Phone' & "</span></div>
                                                </div>
                                            </div>
                                            <!-- APPOINTMENT INFO -->
                                            <div style='display: flex; margin-bottom: 26px;'>
                                                <!-- PCR TEST ICON -->
                                                <div style='height:100px;width:100px'>
                                                " &
                        //Text(LblServiceGroup) = "true",
                     If(
                        ThisItem.'Appointment Test Type' = 'Service Group'.'Point of Care Testing',
                        "<svg width='100' height='100' viewBox='0 0 100 100' fill='none' xmlns='http://www.w3.org/2000/svg'>
                    <rect width='100' height='100' fill='#F3F3F4'/>
                    <path fill-rule='evenodd' clip-rule='evenodd' d='M59.4642 27.8539C60.4084 26.9741 61.6721 26.4564 63.0057 26.403C64.3394 26.3496 65.6461 26.7644 66.6677 27.5655L67.0064 27.8539L68.892 29.6144C69.8352 30.4943 70.3905 31.6719 70.4483 32.9148C70.506 34.1577 70.0621 35.3756 69.204 36.3283L68.8947 36.6466L67.0064 38.4046C66.8439 38.5557 66.671 38.6969 66.489 38.8274C66.7224 39.6074 66.7479 40.4287 66.5634 41.22C66.3788 42.0113 65.9899 42.7486 65.4302 43.3679L65.1209 43.6788L62.4805 46.1405C64.3168 47.6558 65.7865 49.5178 66.7921 51.6031C67.7977 53.6883 68.3162 55.9491 68.3133 58.2354C68.3133 62.3234 66.6864 66.0558 64.0034 68.903L63.486 69.4252H70.9802C71.66 69.4259 72.3138 69.6686 72.8081 70.1037C73.3024 70.5388 73.5999 71.1334 73.6397 71.7661C73.6795 72.3988 73.4588 73.0218 73.0225 73.5078C72.5862 73.9938 71.9673 74.3062 71.2923 74.381L70.9802 74.3984H28.3083C27.6286 74.3977 26.9747 74.1551 26.4805 73.72C25.9862 73.2849 25.6887 72.6903 25.6489 72.0575C25.609 71.4249 25.8298 70.8018 26.2661 70.3158C26.7024 69.8298 27.3213 69.5175 27.9963 69.4426L28.3083 69.4252H50.9778C53.3856 69.4255 55.7378 68.7505 57.7287 67.488C59.7197 66.2254 61.2573 64.4338 62.1417 62.3458C63.0262 60.2578 63.2166 57.97 62.6882 55.7798C62.1598 53.5895 60.937 51.5982 59.1788 50.0644L58.6987 49.6665L50.0337 57.748C49.0896 58.6271 47.8264 59.1444 46.4934 59.1978C45.1603 59.2512 43.8543 58.8368 42.8328 58.0365L42.4914 57.7456L36.8347 52.4714C35.8907 51.5914 35.335 50.4133 35.2772 49.1699C35.2194 47.9264 35.6638 46.7079 36.5227 45.7551L36.8347 45.4393L51.9219 31.3725C52.5899 30.7494 53.4234 30.303 54.3372 30.0789C55.251 29.8547 56.2122 29.8609 57.1225 30.0968L57.3412 29.8482L57.5786 29.6144L59.4642 27.8539ZM34.9491 54.232L40.6032 59.5061C40.8581 59.7353 41.0614 60.0095 41.2014 60.3128C41.3414 60.6161 41.4153 60.9424 41.4186 61.2725C41.4219 61.6027 41.3547 61.9302 41.2208 62.2359C41.0869 62.5415 40.8891 62.8193 40.6389 63.0529C40.3887 63.2866 40.091 63.4714 39.7634 63.5966C39.4357 63.7219 39.0846 63.785 38.7304 63.7824C38.3763 63.7798 38.0263 63.7114 37.7008 63.5813C37.3753 63.4512 37.0809 63.262 36.8347 63.0246L31.1753 57.748C30.9277 57.517 30.7313 57.2428 30.5974 56.941C30.4635 56.6392 30.3946 56.3157 30.3947 55.9891C30.3948 55.6625 30.464 55.3391 30.5981 55.0374C30.7323 54.7357 30.9289 54.4616 31.1767 54.2307C31.4245 53.9998 31.7186 53.8167 32.0423 53.6919C32.366 53.567 32.7129 53.5028 33.0632 53.5029C33.4135 53.503 33.7603 53.5674 34.0839 53.6925C34.4075 53.8176 34.7015 54.0009 34.9491 54.232ZM63.2353 31.375L61.3497 33.133L63.2353 34.891L65.1209 33.133L63.2353 31.375Z' fill='#0052CC'/>
                    </svg> ",
                        //LblMTM.Text = "true",
                        ThisItem.'Appointment Test Type' = 'Service Group'.'Assessment and Intervention',
                        "<svg width='100' height='100' viewBox='0 0 100 100' fill='none' xmlns='http://www.w3.org/2000/svg'>
                    <rect width='100' height='100' fill='#F3F3F4'/>
                    <path d='M51.4729 29.7788C51.2796 29.5852 51.05 29.4315 50.7973 29.3267C50.5445 29.2219 50.2736 29.168 50 29.168C49.7264 29.168 49.4555 29.2219 49.2027 29.3267C48.95 29.4315 48.7204 29.5852 48.5271 29.7788L29.7771 48.5288C29.4858 48.8202 29.2875 49.1913 29.2071 49.5954C29.1268 49.9995 29.168 50.4183 29.3257 50.7989C29.4833 51.1795 29.7503 51.5049 30.0928 51.7338C30.4353 51.9627 30.838 52.085 31.25 52.0851H33.3333V66.6684C33.3333 68.9663 35.2021 70.8351 37.5 70.8351H62.5C64.7979 70.8351 66.6667 68.9663 66.6667 66.6684V52.0851H68.75C69.1624 52.086 69.5658 51.9643 69.909 51.7356C70.2522 51.5068 70.5196 51.1812 70.6774 50.8002C70.8353 50.4192 70.8763 49.9998 70.7954 49.5954C70.7145 49.191 70.5152 48.8198 70.2229 48.5288L51.4729 29.7788ZM62.5021 66.6684H37.5V46.6976L50 34.1976L62.5 46.6976V56.2517L62.5021 66.6684Z' fill='#0052CC'/>
                    <path d='M52.0834 45.832H47.9167V52.082H41.6667V56.2487H47.9167V62.4987H52.0834V56.2487H58.3334V52.082H52.0834V45.832Z' fill='#0259A8'/>
                    </svg>
                     ",
                        "<svg width='100' height='100' viewBox='0 0 100 100' fill='none' xmlns='http://www.w3.org/2000/svg'>
                    <rect width='100' height='100' fill='#F3F3F4'/>
                    <path d='M50 37.5317L44.6146 42.878L51.0732 49.3366L49.0049 51.4049L42.5463 44.9463L39.0927 48.4L45.5512 54.8585L43.4829 56.9268L37.0244 50.4683L33.122 54.3707C32.5018 54.9714 32.0984 55.7607 31.9748 56.6152C31.8513 57.4696 32.0145 58.3409 32.439 59.0927L34.3902 62.7805L30 67.2488L32.7512 70L37.2195 65.6098L40.9073 67.561C41.5021 67.8981 42.1749 68.073 42.8585 68.0683C43.3735 68.0687 43.8834 67.9672 44.359 67.7696C44.8345 67.572 45.2662 67.2823 45.6293 66.9171L62.4683 50L50 37.5317ZM65.2195 44.5366L61.7268 41.0244L64.4976 38.2732L67.2488 41.0244L70 38.2732L61.7268 30L58.9756 32.7512L61.7268 35.522L58.9756 38.2732L55.4634 34.7805L52.0683 31.3659L49.3171 34.1366L51.3268 36.1463V36.1659L63.8341 48.6732H63.8537L65.8634 50.6829L68.6341 47.9317L65.239 44.5366H65.2195V44.5366Z' fill='#0052CC'/>
                    </svg>
                    "
                    ) & "
                    </div>
                                                <div style='margin-left: 20px;'>
                                                    <div style='font-size: 21.3px; font-weight: 700;height:45px;width:300px; overflow: hidden;text-overflow: ellipsis;white-space: nowrap'>" & If(
                        (ThisItem.'Healthcare Service'.Name = "I'm not sure" || ThisItem.'Healthcare Service'.Name = "I am not sure"),
                        Text(
                            LookUp(
                                'Sub Services',
                                'Healthcare Service (msemr_healthcareserviceid)' = ThisItem.'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)'
                            ).Service.Name
                        ),
                        ThisItem.'Healthcare Service'.Name
                    ) & "
                                                    </div>
                                                    <div style='margin: 12px 0; display: flex; align-items: center;'>
                                                        <svg width='20' height='20' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>
                    <path d='M17.9995 4H5.99951C3.79037 4 1.99951 5.79086 1.99951 8V18C1.99951 20.2091 3.79037 22 5.99951 22H17.9995C20.2087 22 21.9995 20.2091 21.9995 18V8C21.9995 5.79086 20.2087 4 17.9995 4Z' stroke='#091E42' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                    <path d='M7.99951 2V6M15.9995 2V6M1.99951 10H21.9995' stroke='#091E42' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                    </svg>
                                                        <span style='color: #2A2A2A; margin-left: 8px;font-size: 18.6px;'>" & Text(
                        ThisItem.'Appointment Date Time',
                        DateTimeFormat.ShortDate
                    ) & "</span>
                                                    </div>
                                                    <div style='display: flex; align-items: center;'>
                                                        <svg width='21' height='21' viewBox='0 0 13 17' fill='none' xmlns='http://www.w3.org/2000/svg'>
                                                            <path d='M6.33301 9.16406C7.43758 9.16406 8.33301 8.26863 8.33301 7.16406C8.33301 6.05949 7.43758 5.16406 6.33301 5.16406C5.22844 5.16406 4.33301 6.05949 4.33301 7.16406C4.33301 8.26863 5.22844 9.16406 6.33301 9.16406Z' stroke='#091E42' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                                                            <path d='M6.33333 1.83203C4.91885 1.83203 3.56229 2.39393 2.5621 3.39413C1.5619 4.39432 1 5.75088 1 7.16536C1 8.4267 1.268 9.25203 2 10.1654L6.33333 15.1654L10.6667 10.1654C11.3987 9.25203 11.6667 8.4267 11.6667 7.16536C11.6667 5.75088 11.1048 4.39432 10.1046 3.39413C9.10438 2.39393 7.74782 1.83203 6.33333 1.83203V1.83203Z' stroke='#091E42' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                                                        </svg>
                                                        <span style='color: #2A2A2A;width:250px; margin-left: 8px;font-size: 18.6px;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;'>" & ThisItem.Location.Name & "</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <!-- STATUS SECTION -->
                                            <div style='display: flex; align-items: center;'>
                                                <div style='display: flex; align-items: center;'>
                                                    <div style='font-size: 18.6px; font-weight: 600; width: 120px; padding: 10px; text-align: center; 
                                                    background-color: " & If(
                        ThisItem.'Appointment Status' = 'Appointment Status'.Booked,
                        "rgba(0, 82, 204, 1)",
                        ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                        "rgba(108, 170, 149, 1)",
                        ThisItem.'Appointment Status' = 'Appointment Status'.'No Show',
                        "rgba(222, 53, 11, 1)",
                        "rgba(255, 153, 31, 1)"
                    ) & "; 
                                                    color: #ffffff; box-sizing: border-box;'>" & ThisItem.'Appointment Status' & "</div>
                                                     " & If(ThisItem.'Appointment Booking Type Options'='Appointment Booking Type'.Multiservice,"
                                                    <!-- MULTI-SERVICE ICON -->
                                                    <div style='font-size: 18.6px; font-weight: 600; width: 140px; margin-left: 8px; padding: 10px; text-align: center; background-color: #6CAA95; color: #ffffff; box-sizing: border-box;'>Multi-service</div>
                    "
                    ) & "
                                                </div>
                                                <span style='margin-left: auto; color: #091E42; font-size: 24px; font-weight: 700;'>" & ThisItem.Patient.'Confirmation Code' & "</span>
                                            </div>
                                        </div>
                                        <!-- BOTTOM SECTION -->
                                        <div style='display: flex; align-items: center; border-top: 1px solid #949494;'>
                                        " & If(
                        !IsBlank(ThisItem.'Test Result'),
                        "
                                            <!-- ACTION NEEDED - TEST RESULT -->
                                            <div style='margin-left: 24px;'>
                                                <div style='display: flex; align-items: center;font-size: 18.6px;'>
                                                    Test Result: <span style='font-weight: 600; margin-left: 4px;
                                                    color:" & If(
                            ThisItem.'Test Result' = 'Test Result'.Positive,
                            "rgba(222, 53, 11, 1)",
                            ThisItem.'Test Result' = 'Test Result'.Negative,
                            "rgba(108, 170, 149, 1)",
                            "rgba(255, 153, 31, 1)"
                        ) & "'> " & ThisItem.'Test Result' & "</span>
                                                    <!-- Test Result: <span style='color:#6CAA95; font-weight: 600; margin-left: 4px;'>Negative</span> -->
                                                </div>
                                            </div>
                    "
                    ) & "
                    " & If(
                        IsBlank(ThisItem.'Test Result') && ThisItem.'Appointment Test Type' = 'Service Group'.'Point of Care Testing' && ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                        "
                                            <!-- ACTION NEEDED -->
                                            <div style='margin-left: 24px;'>
                                                <div style='display: flex; align-items: center; margin-bottom: 4px;'>
                                                    <svg width='28' height='29' viewBox='0 0 24 25' fill='none' xmlns='http://www.w3.org/2000/svg'>
                                                        <path d='M10.91 3.28161C11.4076 3.00609 11.991 2.92924 12.543 3.06654C13.095 3.20383 13.5745 3.54508 13.885 4.02161L13.968 4.15961L21.727 18.1686C21.9102 18.4997 22.0069 18.8716 22.0082 19.25C22.0096 19.6283 21.9155 20.0009 21.7347 20.3333C21.5538 20.6656 21.2921 20.947 20.9737 21.1514C20.6553 21.3558 20.2905 21.4766 19.913 21.5026L19.759 21.5086H4.24298C3.86502 21.5086 3.49315 21.4134 3.1617 21.2318C2.83024 21.0501 2.54989 20.7879 2.3465 20.4693C2.14312 20.1508 2.02327 19.7861 1.99801 19.409C1.97275 19.0319 2.0429 18.6545 2.20198 18.3116L2.27398 18.1686L10.031 4.15961C10.2355 3.79038 10.5398 3.48613 10.909 3.28161H10.91ZM20.415 18.8946L12.655 4.88661C12.5944 4.77746 12.5074 4.68517 12.4021 4.61812C12.2968 4.55107 12.1764 4.51137 12.0518 4.50263C11.9273 4.49389 11.8025 4.51638 11.6889 4.56807C11.5752 4.61975 11.4763 4.699 11.401 4.79861L11.344 4.88661L3.58698 18.8946C3.52751 19.0017 3.49519 19.1218 3.49286 19.2443C3.49052 19.3669 3.51825 19.4881 3.5736 19.5974C3.62895 19.7067 3.71025 19.8008 3.81038 19.8715C3.91051 19.9421 4.02642 19.9871 4.14798 20.0026L4.24298 20.0086H19.759C19.8814 20.0085 20.002 19.9784 20.1102 19.921C20.2183 19.8635 20.3108 19.7805 20.3795 19.6791C20.4481 19.5777 20.4909 19.461 20.5041 19.3392C20.5172 19.2175 20.5004 19.0944 20.455 18.9806L20.415 18.8946L12.655 4.88661L20.415 18.8946V18.8946ZM12 16.5016C12.1338 16.4974 12.267 16.5201 12.3919 16.5683C12.5167 16.6166 12.6306 16.6895 12.7267 16.7826C12.8229 16.8758 12.8993 16.9873 12.9515 17.1105C13.0037 17.2338 13.0306 17.3663 13.0306 17.5001C13.0306 17.634 13.0037 17.7664 12.9515 17.8897C12.8993 18.0129 12.8229 18.1245 12.7267 18.2176C12.6306 18.3107 12.5167 18.3836 12.3919 18.4319C12.267 18.4801 12.1338 18.5028 12 18.4986C11.7406 18.4904 11.4947 18.3816 11.3141 18.1952C11.1335 18.0089 11.0326 17.7596 11.0326 17.5001C11.0326 17.2406 11.1335 16.9913 11.3141 16.805C11.4947 16.6186 11.7406 16.5098 12 16.5016V16.5016ZM11.995 8.99961C12.1762 8.99934 12.3515 9.06473 12.4882 9.18367C12.625 9.30261 12.7141 9.46707 12.739 9.64661L12.746 9.74861L12.75 14.2506C12.7522 14.4421 12.6811 14.6272 12.5513 14.7679C12.4214 14.9086 12.2426 14.9944 12.0516 15.0076C11.8606 15.0207 11.6717 14.9603 11.5238 14.8387C11.3759 14.7171 11.28 14.5436 11.256 14.3536L11.25 14.2516L11.246 9.74961C11.246 9.5507 11.325 9.35993 11.4656 9.21928C11.6063 9.07863 11.7971 8.99961 11.996 8.99961H11.995Z' fill='#FF991F'/>
                                                    </svg>
                                                    <div style='margin-left: 8px; color: #FF991F;font-size: 16px; font-weight: 600;'>Test results has not been updated yet.</div>
                                                </div>
                                                <div style='display: flex; align-items: center;'>
                                                    <div style='cursor: pointer; font-weight: 600; color: #0052CC; border-bottom: 1px solid #0052CC; margin-right: 16px;font-size: 16px;'>Update results here</div>
                                                </div>
                                            </div>"
                    ) & "
                                            <!-- MENU ICON -->
                                            <div style='margin-left: auto; cursor: pointer;'>
                                               <svg width='48' height='78' viewBox='0 0 48 78' fill='none' xmlns='http://www.w3.org/2000/svg'>
                    <rect width='48' height='78' fill='white'/>
                    <path d='M24 55C25.1046 55 26 54.1046 26 53C26 51.8954 25.1046 51 24 51C22.8954 51 22 51.8954 22 53C22 54.1046 22.8954 55 24 55Z' fill='black' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                    <path d='M24 41C25.1046 41 26 40.1046 26 39C26 37.8954 25.1046 37 24 37C22.8954 37 22 37.8954 22 39C22 40.1046 22.8954 41 24 41Z' fill='black' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                    <path d='M24 27C25.1046 27 26 26.1046 26 25C26 23.8954 25.1046 23 24 23C22.8954 23 22 23.8954 22 25C22 26.1046 22.8954 27 24 27Z' fill='black' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/>
                    </svg>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                    "
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Width: =474.5
                Y: =1
                ZIndex: =1

            BtnMoreOptionsHome As button:
                Align: =Align.Left
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Color: =
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                Fill: =RGBA(0, 0, 0, 0)
                Font: =VarTheme.Font
                Height: =86
                HoverBorderColor: =
                HoverColor: =
                HoverFill: =RGBA(0, 0, 0, 0)
                OnSelect: |-
                    =//Show popup option
                    Set(
                        VarOptionsPopUpHome,
                        true
                    );
                    
                    //Adding options to show in the options
                    Clear(colOptionsPopUpHome);
                    If(
                        ThisItem.'Appointment Status' = 'Appointment Status'.Booked || ThisItem.'Appointment Status' = 'Appointment Status'.'Checked-In',
                        Collect(
                            colOptionsPopUpHome,
                            {Label: "Change Service"}
                        )
                    );
                    If(
                        ThisItem.'Appointment Status' = 'Appointment Status'.Booked || ThisItem.'Appointment Status' = 'Appointment Status'.'Checked-In',
                        Collect(
                            colOptionsPopUpHome,
                            {Label: "Reschedule"}
                        )
                    );
                    If(
                        IsBlank(ThisItem.'Test Result') && ThisItem.'Appointment Test Type'='Service Group'.'Point of Care Testing' && ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                        Collect(
                            colOptionsPopUpHome,
                            {Label: "Add Test Result"}
                        ),
                        !IsBlank(ThisItem.'Test Result') && ThisItem.'Appointment Test Type'='Service Group'.'Point of Care Testing' && ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                        Collect(
                            colOptionsPopUpHome,
                            {Label: "Edit Test Result"}
                        )
                    );
                    If(
                        ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                        Collect(
                            colOptionsPopUpHome,
                            {Label: "View Prescription"}
                        )
                    );
                    Collect(
                        colOptionsPopUpHome,
                        "View Profile"
                    );
                    If(
                        ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled,
                        Collect(
                            colOptionsPopUpHone,
                            {Label: "Add New Appointment"}
                        )
                    );
                    
                    //Setting value for selected patient
                    Set(
                        gblSelectedPatient,
                        First(
                            Filter(
                                Contacts,
                                Contact = ThisItem.Patient.Contact
                            )
                        )
                    );
                    
                    //Setting value for selected patient
                    Set(
                        gblSelectedAppointmentPatient,
                        ThisItem
                    );
                    
                    //Setting value for selected patient
                    ClearCollect(
                        selectAppointment,
                        ThisItem
                    );
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =12
                Text: =""
                Underline: =true
                Width: =48
                X: =426
                Y: =324
                ZIndex: =2

            BtnUpdateResultHome As button:
                Align: =Align.Left
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                Color: =VarTheme.PrimaryColor
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                Fill: =Color.White
                Font: =VarTheme.Font
                HoverBorderColor: =
                HoverColor: =VarTheme.PrimaryColor
                HoverFill: =RGBA(0, 0, 0, 0)
                OnSelect: |-
                    =Set(gblSelectedPatient,First(Filter(Contacts,Contact=ThisItem.Patient.Contact)));
                    Set(
                        gblSelectedAppointmentPatient,
                        ThisItem
                    );
                    
                    ClearCollect(selectAppointment,ThisItem);
                    Set(gblSelectedAppointmentPatient,First(selectAppointment));
                    
                    Reset(GalServiceInfoApptDetails);
                    
                    Set(VarTestResultPopUpHome,true);
                PressedBorderColor: =
                PressedColor: =VarTheme.PrimaryColor
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =12
                Text: ="Update results here"
                Underline: =true
                Visible: =ThisItem.'Appointment Test Type'='Service Group'.'Point of Care Testing' && ThisItem.'Appointment Status' = 'Appointment Status'.Fulfilled
                Width: =300
                X: =24
                Y: =360
                ZIndex: =3

            BtnSelectApptHome As button:
                BorderStyle: =BorderStyle.None
                BorderThickness: =0
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: =RGBA(0, 0, 0, 0)
                DisabledFill: =RGBA(0, 0, 0, 0)
                Fill: =RGBA(0, 0, 0, 0)
                Font: =Font.Lato
                Height: =325
                HoverBorderColor: =
                HoverColor: =RGBA(0, 0, 0, 0)
                HoverFill: =
                OnSelect: |
                    =Set(
                        VarSOAPHistory,
                        false
                    );
                    Set(
                        VarOpenFulfill,
                        false
                    );
                    Set(
                        VarConfirmationScreen,
                        false
                    );
                    Set(
                        existingPaymentInfo,
                        Blank()
                    );
                    Set(
                        gblSelectedPatient,
                        First(
                            Filter(
                                Contacts,
                                Contact = ThisItem.Patient.Contact
                            )
                        )
                    );
                    Set(
                        VarConfirmationScreen,
                        true
                    );
                    Set(
                        gblSelectedAppointmentPatient,
                        ThisItem
                    );
                    ClearCollect(
                        selectAppointment,
                        ThisItem
                    );
                    Set(
                        gblSelectedAppointmentPatient,
                        First(selectAppointment)
                    );
                    Reset(GalServiceInfoApptDetails);
                    Set(
                        VarPatientAppoinmentMode,
                        "Edit"
                    );
                    //checking primary / secondary service tab variable for multiservice
                    If(
                        ThisItem.'Appointment Booking Type Options' = 'Appointment Booking Type'.Multiservice && !IsBlank(ThisItem.'Parent Appointment'),
                        Set(
                            varSelectPrimaryAppt,
                            false
                        ) && Set(
                            varSelectSecondaryAppt,
                            true
                        ),
                        ThisItem.'Appointment Booking Type Options' = 'Appointment Booking Type'.Multiservice && IsBlank(ThisItem.'Parent Appointment'),
                        Set(
                            varSelectPrimaryAppt,
                            true
                        ) && Set(
                            varSelectSecondaryAppt,
                            false
                        )
                    );
                    //checking primary / secondary service tab variable for multiservice end
                    Set(
                        VarDdlFullfilled,
                        Blank()
                    );
                    Set(
                        VarIISConsent,
                        First('App Settings').'Enable IIS Consent'
                    );
                    Set(
                        VarDetailHealthCategory,
                        LookUp(
                            Services,
                            'Healthcare Service Category (msemr_healthcareservicecategoryid)' = gblSelectedAppointmentPatient.'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)'
                        )
                    );
                    Set(
                        VarSelectedLocationRecordAppointments,
                        gblSelectedAppointmentPatient.Location
                    );
                    Set(
                        VarIncludeInsuranceAppointments,
                        VarSelectedLocationRecordAppointments.Insurance
                    );
                    Set(
                        VarIncludeNoInsuranceAppointments,
                        VarSelectedLocationRecordAppointments.'No Insurance'
                    );
                    Set(
                        VarIncludePayAtServiceAppointments,
                        VarSelectedLocationRecordAppointments.'Pay at the time of Service'
                    );
                    If(
                        !IsBlank(gblSelectedPatient),
                        Navigate([@ScnAppointmentDetails])
                    );
                    Set(
                        VarNavigateFindPatientAppointment,
                        false
                    );
                    Set(
                        VarNavigateAppointmentHome,
                        true
                    );
                    Set(
                        VarNavigateActionPage,
                        false
                    );
                    Set(
                        VarNavigatePrevious,
                        ScnFindAppointment
                    );
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Text: =""
                Width: =Parent.TemplateWidth
                ZIndex: =4

            ConHomePopup As groupContainer.manualLayoutContainer:
                Height: =410
                Visible: =VarOptionsPopUpHome && ThisItem.IsSelected
                Width: =Parent.TemplateWidth
                ZIndex: =5

                BgCloseHomePopUp As rectangle:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =Parent.Height
                    HoverFill: =RGBA(0, 0, 0, 0)
                    OnSelect: =Set(VarOptionsPopUpHome,false);
                    PressedFill: =RGBA(0, 0, 0, 0)
                    Width: =Parent.Width
                    ZIndex: =1

                galOptionsPopUpHome As gallery.galleryVertical:
                    BorderColor: =RGBA(224, 224, 219, 1)
                    BorderThickness: =2
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =galOptionsPopUpHome.TemplateHeight * CountRows(galOptionsPopUpHome.AllItems)
                    Items: =colOptionsPopUpHome
                    Layout: =Layout.Vertical
                    ShowScrollbar: =false
                    TemplatePadding: =10
                    TemplateSize: =40
                    Visible: =VarOptionsPopUpHome && ThisItem.IsSelected
                    Width: =250
                    X: =165
                    Y: =Parent.Height-Self.Height-50
                    ZIndex: =2

                    BtnPopUpHome As button:
                        Align: =Align.Left
                        BorderStyle: =BorderStyle.None
                        Color: =VarTheme.InputText
                        Fill: =RGBA(0, 0, 0, 0)
                        Font: =VarTheme.Font
                        HoverBorderColor: =RGBA(0, 0, 0, 0)
                        HoverColor: =VarTheme.InputText
                        HoverFill: =RGBA(0, 0, 0, 0)
                        OnSelect: |-
                            =//Setting up common block of functions
                            Set(
                                VarOptionsPopUpHome,
                                false
                            );
                            Set(
                                glbPatientPersonalInfo,
                                First(
                                    Filter(
                                        Contacts,
                                        Contact = gblSelectedPatient.Contact
                                    )
                                )
                            );
                            Set(
                                VarSelectedLocationRecordAppointments,
                                gblSelectedAppointmentPatient.Location
                            );
                            Concurrent(
                                Set(
                                    VarIncludeInsuranceAppointments,
                                    VarSelectedLocationRecordAppointments.Insurance
                                ),
                                Set(
                                    VarIncludeNoInsuranceAppointments,
                                    VarSelectedLocationRecordAppointments.'No Insurance'
                                ),
                                Set(
                                    VarIncludePayAtServiceAppointments,
                                    VarSelectedLocationRecordAppointments.'Pay at the time of Service'
                                )
                            );
                            //Triggering Code depending upon the cases
                            If(
                                //Code to trigger when Label is Change Service
                                ThisItem.Label = "Change Service",
                                Set(
                                    VarChangeServiceHome,
                                    true
                                );
                                Reset(GalServiceInfoApptDetails);
                                Set(
                                    VarPatientAppoinmentMode,
                                    "Edit"
                                );
                                Set(
                                    VarDdlFullfilled,
                                    Blank()
                                );
                                Set(
                                    VarIISConsent,
                                    First('App Settings').'Enable IIS Consent'
                                );
                                Set(
                                    VarDetailHealthCategory,
                                    LookUp(
                                        Services,
                                        'Healthcare Service Category (msemr_healthcareservicecategoryid)' = gblSelectedAppointmentPatient.'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)'
                                    )
                                );
                                If(
                                    !IsBlank(gblSelectedPatient),
                                    Navigate([@ScnAppointmentDetails])
                                );
                                Set(
                                    VarNavigatePrevious,
                                    ScnFindAppointment
                                );
                                Set(
                                    VarPatientProfileMode,
                                    "Edit"
                                );
                                Set(
                                    VarPatientAppoinmentMode,
                                    "Edit"
                                );
                                Set(
                                    VarHidePatientVerificationCard,
                                    true
                                );
                                Reset([@CmbService]);
                                Reset([@CmbSubService]);
                                Navigate([@ScnLocation]);
                                ,
                                 //Code to trigger when Label is Reschedule
                                ThisItem.Label = "Reschedule",
                                Set(
                                    gblSelectedAppointmentPatient,
                                    First(selectAppointment)
                                );
                                Reset(GalServiceInfoApptDetails);
                                Set(
                                    VarPatientAppoinmentMode,
                                    "Edit"
                                );
                                Set(
                                    VarDdlFullfilled,
                                    Blank()
                                );
                                Set(
                                    VarIISConsent,
                                    First('App Settings').'Enable IIS Consent'
                                );
                                Set(
                                    VarDetailHealthCategory,
                                    LookUp(
                                        Services,
                                        'Healthcare Service Category (msemr_healthcareservicecategoryid)' = gblSelectedAppointmentPatient.'Healthcare Service'.'Healthcare Service (msemr_healthcareserviceid)'
                                    )
                                );
                                Set(
                                    VarRescheduleLocationRecord,
                                    LookUp(
                                        Locations,
                                        Location = CmbSiteLocation.Selected.Location
                                    )
                                );
                                Set(
                                    VarRescheduleSlotDurationInterval,
                                    VarRescheduleLocationRecord.'Block duration (minutes)'
                                );
                                Set(
                                    VarRescheduleStartTime,
                                    DateTimeValue(
                                        Text(
                                            Text(
                                                Today(),
                                                "mm/dd/yyyy"
                                            ) & " " & VarRescheduleLocationRecord.'Clinic start time'
                                        )
                                    )
                                );
                                Set(
                                    VarRescheduleBlockDuration,
                                    (VarRescheduleLocationRecord.'Block duration (minutes)' / (60 * 24))
                                );
                                Set(
                                    VarRescheduleclinicDuration,
                                    Value(VarRescheduleLocationRecord.'Clinic duration')
                                );
                                Set(
                                    VarRescheduleclinicPerHour,
                                    Value(Text(VarRescheduleLocationRecord.'Block per hour'))
                                );
                                Set(
                                    VarRescheduleTotalSlotBlock,
                                    VarRescheduleclinicDuration * VarRescheduleclinicPerHour
                                );
                                Clear(rescheduleDefaultAppointmentSlotCollection);
                                If(
                                    CountRows(rescheduleDefaultAppointmentSlotCollection) < VarRescheduleTotalSlotBlock,
                                    ClearCollect(
                                        rescheduleDefaultAppointmentSlotCollection,
                                        ForAll(
                                            Sequence(VarRescheduleTotalSlotBlock),
                                            {VarRescheduleStartTime: VarRescheduleStartTime + VarRescheduleBlockDuration * (Value - 1)}
                                        )
                                    )
                                );
                                ClearCollect(
                                    ServiceExistingAppDataSlot,
                                    AddColumns(
                                        gblSelectedAppointmentPatient.'Healthcare Service'.'Slots (smvs_msemr_healthcareservice_msemr_slot_msemr_)',
                                        "Date",
                                        Start,
                                        "Time",
                                        End,
                                        "SlotId",
                                        Slot,
                                        "Dose",
                                        'Appointment Type'
                                    )
                                );
                                Set(
                                    VarRescheduleSelectedDate,
                                    Blank()
                                );
                                Set(
                                    VarSelectedItem,
                                    false
                                );
                                Reset(GalFirstDoseDefaultSlot_1);
                                Reset(GalSecondDoseDefaultSlot_1);
                                Navigate(ScnReschedule);
                                ,
                                 //Code to trigger when Label is Add Test Result or Edit Test Result
                                ThisItem.Label = "Add Test Result" || ThisItem.Label = "Edit Test Result",
                                Reset(GalServiceInfoApptDetails);
                                Set(
                                    VarTestResultPopUpHome,
                                    true
                                );
                                Set(
                                    VarTestResultPopUpHome,
                                    true
                                );
                                Set(
                                    VarTestReportPopUpHome,
                                    true
                                );
                                ,
                                 //Code to trigger when Label is View Prescription
                                ThisItem.Label = "View Prescription",
                                Set(
                                    gblSelectedAppointmentPatient,
                                    First(selectAppointment)
                                );
                                Reset(GalServiceInfoApptDetails);
                                Set(
                                    VarPatientAppoinmentMode,
                                    "Edit"
                                );
                                Set(
                                    VarDdlFullfilled,
                                    Blank()
                                );
                                Set(
                                    VarIISConsent,
                                    First('App Settings').'Enable IIS Consent'
                                );
                                Navigate(ScnPrescriptionPDF);
                                ,
                                 //Code to trigger when Label is View Profile
                                ThisItem.Label = "View Profile",
                                Navigate(ScnPatientAppointment);
                                ,
                                 //Code to trigger when Label is Add New Appointment
                                ThisItem.Label = "Add New Appointment",
                                Set(
                                    VarConfirmationScreen,
                                    true
                                );
                                Set(
                                    VarNewPatient,
                                    false
                                );
                                Set(
                                    VarPatientProfileMode,
                                    "Edit"
                                );
                                Set(
                                    VarPatientAppoinmentMode,
                                    "New"
                                );
                                Set(
                                    VarNewAppointmentValidationChk,
                                    false
                                );
                                Set(
                                    gblSelectedAppointmentPatient,
                                    Blank()
                                );
                                Set(
                                existingPaymentInfo,
                                First(
                                    Sort(
                                        Filter(
                                            'Appointments (EMR)',
                                            Patient.Contact = gblSelectedPatient.Contact
                                        ),
                                        'Date Created',
                                        SortOrder.Descending
                                    )
                                )
                            );
                                ResetForm(FrmPayment);
                                Reset([@CmbSiteLocation]);
                                Reset([@CmbServiceType]);
                                Reset([@CmbService]);
                                Reset([@CmbSubService]);
                                Set(
                                    VarReturningPatient,
                                    true
                                );
                                Set(
                                    VarExistingPatient,
                                    true
                                );
                                Navigate(
                                    ScnPatientType,
                                    ScreenTransition.None
                                );
                                
                            )
                        PaddingLeft: =20
                        PressedBorderColor: =RGBA(0, 0, 0, 0)
                        PressedColor: =VarTheme.InputText
                        PressedFill: =RGBA(0, 0, 0, 0)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =16
                        Text: =ThisItem.Label
                        Width: =230
                        ZIndex: =2

    GalHomeTabs As gallery.galleryHorizontal:
        DelayItemLoading: =true
        Fill: |-
            =RGBA(
                    243,
                    243,
                    244,
                    1
                )
        Height: =74
        Items: |-
            =Table(
                {
                    ItemNumber: 1,
                    Name: "Booked",
                    Status: locAppointmentStatus.Booked
            
                },
                {
                    ItemNumber: 2,
                    Name: "Fulfilled",
                    Status: locAppointmentStatus.Fulfilled
            
                },
                {
                    ItemNumber: 3,
                    Name: "Checked-In",
                    Status: locAppointmentStatus.'Checked-In'
            
                },
                {
                    ItemNumber: 4,
                    Name: "Cancelled",
                    Status: locAppointmentStatus.Cancelled
            
                }
            )
        LoadingSpinner: =LoadingSpinner.Data
        TemplatePadding: =0
        TemplateSize: =230
        Width: =Parent.Width
        Y: =ConStatisticsHome.Y+ConStatisticsHome.Height+5
        ZIndex: =5

        BtnTabsHome As button:
            Align: =Align.Left
            AutoDisableOnSelect: =false
            BorderStyle: =BorderStyle.None
            BorderThickness: =0
            Color: |-
                =If(
                    (ThisItem.Name = "Booked" && locActiveTab = 'Appointment Status'.Booked) || (ThisItem.Name = "Fulfilled" && locActiveTab = 'Appointment Status'.Fulfilled) || (ThisItem.Name = "Checked-In" && locActiveTab = 'Appointment Status'.'Checked-In') || (ThisItem.Name = "Cancelled" && locActiveTab = 'Appointment Status'.Cancelled),
                    VarTheme.FontColorBold,
                    RGBA(
                        9,
                        30,
                        66,
                        0.5
                    )
                )
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledColor: =
            Fill: |-
                =If(
                    (ThisItem.Name = "Booked" && locActiveTab = 'Appointment Status'.Booked) ||
                    (ThisItem.Name = "Fulfilled" && locActiveTab = 'Appointment Status'.Fulfilled) ||
                    (ThisItem.Name = "Checked-In" && locActiveTab = 'Appointment Status'.'Checked-In') ||
                    (ThisItem.Name = "Cancelled" && locActiveTab = 'Appointment Status'.Cancelled),
                    RGBA(
                        255,
                        255,
                        255,
                        1
                    ),
                    RGBA(
                        243,
                        243,
                        244,
                        1
                    )
                )
            Font: =VarTheme.Font
            Height: =71
            HoverBorderColor: =
            HoverColor: =If(locActiveTab<>'Appointment Status'.Booked,RGBA(9, 30, 66, 0.5),VarTheme.FontColorBold)
            HoverFill: =
            OnSelect: |
                =UpdateContext(
                    {
                        locActiveTab: Switch(
                            ThisItem.Name,
                            "Booked",
                            'Appointment Status'.Booked,
                            "Fulfilled",
                            'Appointment Status'.Fulfilled,
                            "Checked-In",
                            'Appointment Status'.'Checked-In',
                            "Cancelled",
                            'Appointment Status'.Cancelled
                        )
                    }
                );
            PaddingLeft: =38
            PressedBorderColor: =
            PressedColor: =If(locActiveTab='Appointment Status'.Booked,RGBA(9, 30, 66, 0.5),VarTheme.FontColorBold)
            PressedFill: =
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =20
            Text: =ThisItem.Name
            Width: =230
            Y: =3
            ZIndex: =2

        HtmlCountHome As htmlViewer:
            AutoHeight: =true
            Font: =Font.Lato
            HtmlText: |-
                ="<div style='display: flex; flex-direction: column; align-items: flex-start; padding: 2px 10px; gap: 10px; height: 29px; background: #D0E3FF; border-radius: 45px; flex: none; order: 1; flex-grow: 0;align-items: center;justify-content: center;'>
                   <span style='font-style: normal; font-weight: 700; font-size: 17px; line-height: 24px; color: #0061F0;'>" & CountRows(
                    Filter(
                        'Appointments (EMR)',
                        ('Appointment Status' = ThisItem.Status) && (IsBlank(LocationComponentHome.SelectedLocationID) || IsEmpty(LocationComponentHome.SelectedLocationID) || Location.Location = GUID(LocationComponentHome.SelectedLocationID)) && 'Appointment Date Time' >= DateAdd(
                            DateComponentHome.SelectedDate,
                            -TimeZoneOffset(),
                            TimeUnit.Minutes
                        ) && 'Appointment Date Time' < DateAdd(
                            DateAdd(
                                DateComponentHome.SelectedDate,
                                -TimeZoneOffset(),
                                TimeUnit.Minutes
                            ),
                            24,
                            TimeUnit.Hours
                        )
                    )
                ) & "</span>
                </div>
                "
            Size: =18
            Width: =45
            X: =175
            Y: =20
            ZIndex: =3

    ConStatisticsHome As groupContainer.manualLayoutContainer:
        Height: |-
            =If(
                Self.Visible,
                NewStatisticsBarHome.Height + 8,
                0
            )
        Visible: |-
            =//StatisticsBarHome.IsVisible && CountRows(GalAppointmentHome.AllItems)>0
            true
        Width: =Parent.Width
        Y: =ConSubBannerHome.Y+ConSubBannerHome.Height
        ZIndex: =6

        NewStatisticsBarHome As NewStatisticsBar:
            Item: |-
                =Table(
                    {
                        ItemNumber: 1,
                        Count: CountRows(
                    Filter(
                        'Appointments (EMR)',
                        ((IsBlank(LocationComponentHome.SelectedLocationID) || IsEmpty(LocationComponentHome.SelectedLocationID) || Location.Location = GUID(LocationComponentHome.SelectedLocationID)) && 'Appointment Date Time' >= DateAdd(
                            DateComponentHome.SelectedDate,
                            -TimeZoneOffset(),
                            TimeUnit.Minutes
                        ) && 'Appointment Date Time' < DateAdd(
                            DateAdd(
                                DateComponentHome.SelectedDate,
                                -TimeZoneOffset(),
                                TimeUnit.Minutes
                            ),
                            24,
                            TimeUnit.Hours
                        ))
                    )
                ),
                        Label1: "Appointments",
                        Label2: "for the day",
                        Image: "data:image/svg+xml;utf8, " & EncodeUrl(
                    "<svg width='50' height='50' viewBox='0 0 50 50' fill='none' xmlns='http://www.w3.org/2000/svg'>
                <rect width='50' height='49.3684' fill='#F3F9FD'/>
                <path d='M16.7894 11.6842C16.7894 11.3063 17.0957 11 17.4736 11C17.8515 11 18.1578 11.3063 18.1578 11.6842V15.7895C18.1578 16.1674 17.8515 16.4737 17.4736 16.4737C17.0957 16.4737 16.7894 16.1674 16.7894 15.7895V11.6842Z' fill='#2484CE'/>
                <path d='M27.7368 11.6842C27.7368 11.3063 28.0431 11 28.421 11C28.7989 11 29.1052 11.3063 29.1052 11.6842V15.7895C29.1052 16.1674 28.7989 16.4737 28.421 16.4737C28.0431 16.4737 27.7368 16.1674 27.7368 15.7895V11.6842Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M18.1579 24.0012H16.7894V25.3697H18.1579V24.0012ZM16.7894 22.6328C16.0337 22.6328 15.421 23.2455 15.421 24.0012V25.3697C15.421 26.1254 16.0337 26.7381 16.7894 26.7381H18.1579C18.9136 26.7381 19.5263 26.1254 19.5263 25.3697V24.0012C19.5263 23.2455 18.9136 22.6328 18.1579 22.6328H16.7894Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M23.6316 24.0012H22.2632V25.3697H23.6316V24.0012ZM22.2632 22.6328C21.5074 22.6328 20.8948 23.2455 20.8948 24.0012V25.3697C20.8948 26.1254 21.5074 26.7381 22.2632 26.7381H23.6316C24.3874 26.7381 25 26.1254 25 25.3697V24.0012C25 23.2455 24.3874 22.6328 23.6316 22.6328H22.2632Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M29.1053 24.0012H27.7368V25.3697H29.1053V24.0012ZM27.7368 22.6328C26.9811 22.6328 26.3684 23.2455 26.3684 24.0012V25.3697C26.3684 26.1254 26.9811 26.7381 27.7368 26.7381H29.1053C29.861 26.7381 30.4737 26.1254 30.4737 25.3697V24.0012C30.4737 23.2455 29.861 22.6328 29.1053 22.6328H27.7368Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M18.1579 29.4758H16.7894V30.8443H18.1579V29.4758ZM16.7894 28.1074C16.0337 28.1074 15.421 28.7201 15.421 29.4758V30.8443C15.421 31.6 16.0337 32.2127 16.7894 32.2127H18.1579C18.9136 32.2127 19.5263 31.6 19.5263 30.8443V29.4758C19.5263 28.7201 18.9136 28.1074 18.1579 28.1074H16.7894Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M23.6316 29.4758H22.2632V30.8443H23.6316V29.4758ZM22.2632 28.1074C21.5074 28.1074 20.8948 28.7201 20.8948 29.4758V30.8443C20.8948 31.6 21.5074 32.2127 22.2632 32.2127H23.6316C24.3874 32.2127 25 31.6 25 30.8443V29.4758C25 28.7201 24.3874 28.1074 23.6316 28.1074H22.2632Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M14.7368 15.1067H31.1579C31.9137 15.1067 32.5263 15.7193 32.5263 16.4751V27.4225C32.9988 27.4225 33.4574 27.4824 33.8947 27.5949V16.4751C33.8947 14.9636 32.6694 13.7383 31.1579 13.7383H14.7368C13.2253 13.7383 12 14.9636 12 16.4751V32.8962C12 34.4077 13.2253 35.633 14.7368 35.633H27.7849C27.5399 35.2095 27.3501 34.75 27.2251 34.2646H14.7368C13.9811 34.2646 13.3684 33.652 13.3684 32.8962V16.4751C13.3684 15.7193 13.9811 15.1067 14.7368 15.1067Z' fill='#2484CE'/>
                <path d='M12 16.4732C12 14.9617 13.2253 13.7363 14.7368 13.7363H31.1579C32.6694 13.7363 33.8947 14.9617 33.8947 16.4732V21.2626H12V16.4732Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M31.1579 15.1047H14.7368C13.9811 15.1047 13.3684 15.7174 13.3684 16.4732V19.8942H32.5263V16.4732C32.5263 15.7174 31.9137 15.1047 31.1579 15.1047ZM14.7368 13.7363C13.2253 13.7363 12 14.9617 12 16.4732V21.2626H33.8947V16.4732C33.8947 14.9617 32.6694 13.7363 31.1579 13.7363H14.7368Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M33.2105 21.263H12.6842V19.8945H33.2105V21.263Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M32.5263 37.0008C34.7936 37.0008 36.6316 35.1628 36.6316 32.8956C36.6316 30.6283 34.7936 28.7903 32.5263 28.7903C30.259 28.7903 28.421 30.6283 28.421 32.8956C28.421 35.1628 30.259 37.0008 32.5263 37.0008ZM32.5263 38.3692C35.5493 38.3692 38 35.9186 38 32.8956C38 29.8725 35.5493 27.4219 32.5263 27.4219C29.5032 27.4219 27.0526 29.8725 27.0526 32.8956C27.0526 35.9186 29.5032 38.3692 32.5263 38.3692Z' fill='#2484CE'/>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M32.5263 29.5957C32.9041 29.5957 33.2105 29.902 33.2105 30.2799V33.2207L34.8878 34.385C35.1982 34.6005 35.2752 35.0268 35.0597 35.3373C34.8442 35.6477 34.4179 35.7247 34.1075 35.5092L31.842 33.9367V30.2799C31.842 29.902 32.1484 29.5957 32.5263 29.5957Z' fill='#2484CE'/>
                </svg>
                 "
                )
                
                    },
                    {
                        ItemNumber: 2,
                        Count: CountRows(
                    Filter(
                        'Appointments (EMR)',
                        (IsBlank('Test Result Date') && 'Appointment Test Type' = 'Service Group'.'Point of Care Testing' && !IsBlank('Fulfilled Date') && ('Appointment Status'=locAppointmentStatus.Fulfilled || 'Appointment Status'=locAppointmentStatus.Booked || 'Appointment Status'=locAppointmentStatus.'Checked-In')) || Activity in soapItemsValueHome 
                    )
                ),
                        Label1: "Pending Actions",
                        Label2: "till today",
                        Image: "data:image/svg+xml;utf8, " & EncodeUrl(
                    "<svg width='50' height='50' viewBox='0 0 50 50' fill='none' xmlns='http://www.w3.org/2000/svg'>
                <rect width='50' height='50' fill='#F9F4E7'/>
                <path d='M26.3334 15.666C29.2801 15.666 31.6667 18.0527 31.6667 20.9993C31.6667 22.9993 30.6001 24.6927 29.0001 25.6127V23.986C29.8134 23.2527 30.3334 22.186 30.3334 20.9993C30.3334 18.786 28.5467 16.9993 26.3334 16.9993C24.1201 16.9993 22.3334 18.786 22.3334 20.9993C22.3334 22.186 22.8534 23.2527 23.6667 23.986V25.6127C22.0667 24.6927 21.0001 22.9993 21.0001 20.9993C21.0001 18.0527 23.3867 15.666 26.3334 15.666ZM35.6667 36.3327C35.6267 37.426 34.7601 38.2927 33.6667 38.3327H26.3334C25.8267 38.3327 25.3467 38.1327 25.0001 37.7593L19.6667 32.1593L20.6534 31.1327C20.9067 30.8527 21.2667 30.706 21.6667 30.706H21.9334L25.0001 32.9993V20.9993C25.0001 20.266 25.6001 19.666 26.3334 19.666C27.0667 19.666 27.6667 20.266 27.6667 20.9993V26.9593L29.2801 27.1327L34.5334 30.0527C35.2401 30.3727 35.6667 31.0793 35.6667 31.8527V36.3327ZM35.6667 11.666H14.3334C12.8667 11.666 11.6667 12.866 11.6667 14.3327V24.9993C11.6667 25.7066 11.9477 26.3849 12.4478 26.885C12.9479 27.3851 13.6262 27.666 14.3334 27.666H19.6667V24.9993H14.3334V14.3327H35.6667V24.9993H33.0001V27.666H35.6667V27.6127L35.7201 27.666C37.1734 27.666 38.3334 26.4527 38.3334 24.9993V14.3327C38.3334 13.6254 38.0525 12.9472 37.5524 12.4471C37.0523 11.947 36.374 11.666 35.6667 11.666Z' fill='#BE8B0A'/>
                </svg>
                 "
                )
                    }
                )
            Width: =Parent.Width-52
            X: =26
            ZIndex: =3

    ConSubBannerHome As groupContainer.manualLayoutContainer:
        Fill: =Color.White
        Height: =75
        Width: =Parent.Width
        Y: =ConBannerHome.Y+ConBannerHome.Height
        ZIndex: =7

        DateComponentHome As DateComponent:
            ClearExternalDate: |-
                =UpdateContext({locupcomingappointment:Blank()});
            ExternalDateInput: =locupcomingappointment
            Y: =20

        LocationComponentHome As LocationDdlComponent:
            Items: =LocationItems
            X: =Parent.Width-Self.Width-20
            Y: =20
            ZIndex: =2

    ConBannerHome As groupContainer.manualLayoutContainer:
        Fill: =RGBA(0, 0, 0, 1)
        Height: =75
        Width: =Parent.Width
        Y: =ConHeaderHome.Y+ConHeaderHome.Height
        ZIndex: =8

        LblStaffNameHome As label:
            Color: =RGBA(255, 255, 255, 1)
            Font: =VarTheme.Font
            Height: =50
            Size: =26
            Text: |-
                ="Hi, "&First(ForAll(Split(User().FullName," "), {Result: ThisRecord.Value})).Result
            Width: =400
            X: =26
            Y: =13
            ZIndex: =1

        LblPharmacyNameHome As label:
            Align: =Align.Right
            Color: =RGBA(255, 255, 255, 1)
            Font: =VarTheme.Font
            Height: =50
            Size: =26
            Text: =VarDefaultSiteLocation.Name
            Width: =400
            Wrap: =false
            X: =Parent.Width-Self.Width-20
            Y: =13
            ZIndex: =2

    ConHeaderHome As groupContainer.manualLayoutContainer:
        Height: =VarTheme.HeaderSize
        Width: =Parent.Width
        ZIndex: =9

        BtnDefaults As button:
            BorderColor: =VarTheme.PrimaryColor
            BorderThickness: =1
            Color: =VarTheme.PrimaryColor
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            Fill: =RGBA(0, 0, 0, 0)
            Font: =VarTheme.Font
            Height: =41
            HoverBorderColor: =VarTheme.PrimaryColor
            HoverColor: =VarTheme.PrimaryColor
            HoverFill: =
            OnSelect: =Navigate(ScnDefaults);
            PressedBorderColor: =
            PressedColor: =RGBA(66, 82, 110, 1)
            PressedFill: =
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =14
            Text: =" Set Defaults"
            Width: =135
            X: =Parent.Width-Self.Width-25
            Y: =35
            ZIndex: =1

        ImgLogoHome As image:
            Height: =64
            Image: |-
                ="data:image/svg+xml;utf8, "&EncodeUrl("<svg width='166' height='64' viewBox='0 0 166 64' fill='none' xmlns='http://www.w3.org/2000/svg'>
                <path fill-rule='evenodd' clip-rule='evenodd' d='M21.9361 51C24.52 51 26.6015 50.2747 28.1805 48.824C29.9749 47.1257 30.8721 44.8082 30.8721 41.8715V39.5363C30.8721 36.1397 29.5443 33.2737 26.8886 30.9385C26.1708 30.3017 24.8789 29.4879 23.0127 28.4972C21.972 27.9311 21.2721 27.5065 20.9133 27.2235C19.5854 26.0559 18.9215 24.6583 18.9215 23.0307V22.1285C18.9215 20.8547 19.1906 19.9702 19.729 19.4749C20.1955 19.0503 20.9312 18.838 21.9361 18.838C22.9768 18.838 23.7125 19.0503 24.1432 19.4749C24.6815 19.9348 24.9506 20.8194 24.9506 22.1285V25.3659H30.8721V22.1285C30.8721 19.1918 29.9749 16.8743 28.1805 15.176C26.6015 13.7253 24.52 13 21.9361 13C19.3521 13 17.2707 13.7253 15.6916 15.176C13.8972 16.8743 13 19.1918 13 22.1285V23.0307C13 24.6937 13.3409 26.2505 14.0228 27.7011C14.7047 29.1518 15.6916 30.4432 16.9835 31.5754C17.7731 32.2477 19.0112 33.0261 20.6979 33.9106C21.9181 34.5829 22.6718 35.0428 22.9589 35.2905C24.2867 36.4935 24.9506 37.9088 24.9506 39.5363V41.8715C24.9506 43.1806 24.6815 44.0652 24.1432 44.5251C23.7125 44.9497 22.9768 45.162 21.9361 45.162C20.9312 45.162 20.1955 44.9497 19.729 44.5251C19.1906 44.0298 18.9215 43.1453 18.9215 41.8715V37.0419H13V41.8715C13 44.8082 13.8972 47.1257 15.6916 48.824C17.2707 50.2747 19.3521 51 21.9361 51ZM40.2325 13.4246H34.3111V50.5754H40.2325V13.4246ZM80.5504 50.5754H83.9956V13.4246H78.0742V32.2123L69.0304 13.4246H65.5852V50.5754H71.5067V31.7346L80.5504 50.5754ZM94.0117 19.2626V28.6034H100.687V34.4413H94.0117V44.7374H103.701V50.5754H88.0902V13.4246H103.701V19.2626H94.0117ZM117.719 19.2626H123.748V13.4246H105.768V19.2626H111.798V50.5754H117.719V19.2626ZM132.283 13.4246H126.361V50.5754H132.283V13.4246ZM151.308 48.824C149.729 50.2747 147.648 51 145.064 51C142.552 51 140.47 50.2747 138.819 48.824C137.025 47.0549 136.128 44.7374 136.128 41.8715V22.1285C136.128 19.2626 137.025 16.9451 138.819 15.176C140.47 13.7253 142.552 13 145.064 13C147.648 13 149.729 13.7253 151.308 15.176C153.103 16.8743 154 19.1918 154 22.1285V25.419H148.079V22.1285C148.079 20.8194 147.827 19.9348 147.325 19.4749C146.858 19.0503 146.105 18.838 145.064 18.838C144.059 18.838 143.323 19.0503 142.857 19.4749C142.319 19.9702 142.049 20.8547 142.049 22.1285V41.8715C142.049 43.1453 142.319 44.0298 142.857 44.5251C143.323 44.9497 144.059 45.162 145.064 45.162C146.105 45.162 146.858 44.9497 147.325 44.5251C147.827 44.0652 148.079 43.1806 148.079 41.8715V37.095H154V41.8715C154 44.8082 153.103 47.1257 151.308 48.824ZM59.2583 48.824C57.6792 50.2747 55.5977 51 53.0138 51C50.5016 51 48.4201 50.2747 46.7693 48.824C44.9749 47.0549 44.0777 44.7374 44.0777 41.8715V22.1285C44.0777 19.2626 44.9749 16.9451 46.7693 15.176C48.4201 13.7253 50.5016 13 53.0138 13C55.5977 13 57.6792 13.7253 59.2583 15.176C61.0526 16.8743 61.9498 19.1918 61.9498 22.1285V25.419H56.0283V22.1285C56.0283 20.8194 55.7771 19.9348 55.2747 19.4749C54.8082 19.0503 54.0545 18.838 53.0138 18.838C52.0089 18.838 51.2732 19.0503 50.8067 19.4749C50.2684 19.9702 49.9992 20.8547 49.9992 22.1285V41.8715C49.9992 43.1453 50.2684 44.0298 50.8067 44.5251C51.2732 44.9497 52.0089 45.162 53.0138 45.162C54.0545 45.162 54.8082 44.9497 55.2747 44.5251C55.7771 44.0652 56.0283 43.1806 56.0283 41.8715V34.919H50.7591L54.1155 29.081H61.9498V41.8715C61.9498 44.8082 61.0526 47.1257 59.2583 48.824Z' fill='#2A2A2A'/>
                </svg>
                ")
            Width: =166
            X: =26
            Y: =24
            ZIndex: =2

        IcnSeperatorHeader As icon.VerticalLine:
            Height: =ImgLogoHome.Height-15
            Icon: =Icon.VerticalLine
            Width: =7
            X: =ImgLogoHome.X+ImgLogoHome.Width
            Y: =31
            ZIndex: =3

        LblPharmacyHome As label:
            Font: =VarTheme.Font
            Size: =20
            Text: =First('App Settings').'Organization Name'
            Width: =550
            X: =IcnSeperatorHeader.X+IcnSeperatorHeader.Width+10
            Y: =34
            ZIndex: =4

    ConTestReportHome As groupContainer.manualLayoutContainer:
        Height: =Parent.Height
        Visible: =VarTestResultPopUpHome
        Width: =Parent.Width
        ZIndex: =10

        BgFulfillDetailsPopUp_3 As rectangle:
            Fill: =RGBA(0, 0, 0, 0.37)
            Height: =Parent.Height
            OnSelect: =Set(VarTestResultPopUpHome,false)
            Width: =Parent.Width
            ZIndex: =1

        TestReportComponentHome As TestReportComponent:
            DisplayFields: |-
                =Table(
                    {
                        PatientName: gblSelectedPatient.'Full Name',
                        TestingFacility: gblSelectedAppointmentPatient.'Testing Facility'.Name,
                        TestDevice: gblSelectedAppointmentPatient.'Test Device'.'Test Model Name',
                        TestPerformedName: gblSelectedAppointmentPatient.'Performed Test Name'.'Test Performed Name',
                        SpecimentCollectedOn: DateTimeValue(gblSelectedAppointmentPatient.'Specimen Collected On',"mm/dd//yyyy"),
                        TestDate: DateTimeValue(gblSelectedAppointmentPatient.'Test Reported On',"mm/dd//yyyy"),
                        TestResult: gblSelectedAppointmentPatient.'Test Result',
                        TestResultDate: gblSelectedAppointmentPatient.'Test Result Date'
                    }
                )
            OnClose: =Set(VarTestResultPopUpHome,false)
            OnSave: |
                =If(
                    !IsBlank(gblSelectedAppointmentPatient.'Test Result'),
                    UpdateContext({varReasonForUnlockHome: true});
                    Set(
                        VarTestReportPopUpHome,
                        false
                    );
                    ,
                    Patch(
                        'Appointments (EMR)',
                        gblSelectedAppointmentPatient,
                        {
                            'Test Result': Switch(
                                Self.TestResult,
                                "Positive",
                                'Test Result'.Positive,
                                "Negative",
                                'Test Result'.Negative,
                                "Inconclusive",
                                'Test Result'.Inconclusive
                            ),
                            'Test Result Date': Self.TestDate,
                            'Update In': "Staff" & Switch(
                                Self.TestResult,
                                "Positive",
                                'Test Result'.Positive,
                                "Negative",
                                'Test Result'.Negative,
                                "Inconclusive",
                                'Test Result'.Inconclusive
                            )
                        }
                    );
                    Set(
                        VarTestResultPopUpHome,
                        false
                    );
                    
                );
            Visible: =VarTestReportPopUpHome
            ZIndex: =2

        NoticeOfDataIntegrityHome As NoticeOfDataIntegrity:
            Height: =596
            OnCancel: |-
                =UpdateContext({varReasonForUnlockHome: false});
            OnClose: |-
                =UpdateContext({varReasonForUnlockHome: false});
            OnUnlockEdit: |
                =Patch(
                    'Appointments (EMR)',
                    gblSelectedAppointmentPatient,
                    {
                        'Test Result': Switch(
                            TestReportComponentHome.TestResult,
                            "Positive",
                            'Test Result'.Positive,
                            "Negative",
                            'Test Result'.Negative,
                            "Inconclusive",
                            'Test Result'.Inconclusive
                        ),
                        'Test Result Date': TestReportComponentHome.TestDate,
                        'Update In': "Staff" & Switch(
                            TestReportComponentHome.TestResult,
                            "Positive",
                            'Test Result'.Positive,
                            "Negative",
                            'Test Result'.Negative,
                            "Inconclusive",
                            'Test Result'.Inconclusive
                        ),
                        'Reason for Unlock Test Result': NoticeOfDataIntegrityHome.ReasonForEnablingEditing
                    }
                );
                Set(
                    VarTestResultPopUpHome,
                    false
                );
                UpdateContext({varReasonForUnlockHome: false});
            SubmitButtonName: ="Confirm and Save"
            Visible: =varReasonForUnlockHome
            X: =171
            Y: =60
            ZIndex: =3

    ConNoItemActionsHome As groupContainer.manualLayoutContainer:
        Height: =418
        Visible: =CountRows(GalAppointmentHome.AllItems)=0
        Width: =Parent.Width
        Y: =NoRecordHome.Y+NoRecordHome.Height
        ZIndex: =11

        HtmlNoApptText As htmlViewer:
            Font: =Font.Lato
            Height: =418
            HtmlText: |-
                ="<div style='font-size: 22px; background-color: rgba(232, 241, 255, 1); padding: 8px 30px 8px;'>
                  <p style='line-height: 26px; font-weight: 700;'>Here are some things you can do:</p>
                  <ul style='line-height: 26px;'>
                    <li style='padding-bottom: 10px;'>Try changing <span style='font-weight: 700;'>Date and Location</span></li>
                    <li style='padding-bottom: 10px;'>Review pending actions from <span style='color: rgba(0, 82, 204, 1); text-decoration: underline; font-weight: 700;'>Action Needed Tab</span> at the bottom.</li>
                    <li style='padding-bottom: 10px;'>Try changing defaults by clicking on the <span style='color: rgba(0, 82, 204, 1); text-decoration: underline; font-weight: 700;'>Set Defaults Button</span> above.</li>
                  </ul>
                </div>
                <div style='text-align: center; font-size: 22px; padding-bottom: 15px;padding-top:10px'>Upcoming booked appointment: <span style='font-weight: 700; text-decoration: underline; color: rgba(0, 82, 204, 1);'>"&Text(First(
                    SortByColumns(
                        Filter(
                            'Appointments (EMR)',
                            ((IsBlank(LocationComponentHome.SelectedLocationID) || IsEmpty(LocationComponentHome.SelectedLocationID) || Location.Location = GUID(LocationComponentHome.SelectedLocationID)) && 'Appointment Date Time' >= DateAdd(
                                Today(),
                                -TimeZoneOffset(),
                                TimeUnit.Minutes
                            ))
                        ),
                        "smvs_appointmentdatetime",
                        SortOrder.Ascending
                    )
                ).'Appointment Date Time',DateTimeFormat.LongDate)&"</span></div>
                <div style='text-align: center; border: 1px solid rgba(190, 190, 190, 1); width: 752px; margin: 0 auto;'></div>
                <div style='text-align: center; font-size: 22px; padding: 15px; font-weight: 700;'>Walk-in Patient?</div>"
            Size: =16
            Width: =756
            X: =136
            ZIndex: =1

        BtnActionNeededNoAppt As button:
            BorderColor: =VarTheme.PrimaryColor
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =VarTheme.PrimaryColor
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            Fill: =RGBA(0, 0, 0, 0)
            Font: =VarTheme.Font
            Height: =39
            HoverBorderColor: =VarTheme.PrimaryColor
            HoverColor: =VarTheme.PrimaryColor
            HoverFill: =
            OnSelect: =Navigate(ScnActionNeeded);
            PressedBorderColor: =
            PressedColor: =RGBA(66, 82, 110, 1)
            PressedFill: =
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =14
            Text: =""
            Width: =191
            X: =489
            Y: =114
            ZIndex: =2

        BtnDefaultsNoAppt As button:
            BorderColor: =VarTheme.PrimaryColor
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =VarTheme.PrimaryColor
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            Fill: =RGBA(0, 0, 0, 0)
            Font: =VarTheme.Font
            Height: =43
            HoverBorderColor: =VarTheme.PrimaryColor
            HoverColor: =VarTheme.PrimaryColor
            HoverFill: =
            OnSelect: =Navigate(ScnDefaults);
            PressedBorderColor: =
            PressedColor: =RGBA(66, 82, 110, 1)
            PressedFill: =
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =14
            Text: =""
            Width: =195
            X: =586
            Y: =153
            ZIndex: =3

        BtnNewAppointmentHome As button:
            BorderColor: =VarTheme.PrimaryColor
            BorderThickness: =1
            Color: =VarTheme.PrimaryColor
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            Fill: =RGBA(0, 0, 0, 0)
            Font: =VarTheme.Font
            Height: =59
            HoverBorderColor: =VarTheme.PrimaryColor
            HoverColor: =VarTheme.PrimaryColor
            HoverFill: =
            OnSelect: |
                =Set(
                    VarWalkIn,
                    true
                );
                Set(
                    VarForLater,
                    false
                );
                Set(
                    varGuardianFirstName,
                    Blank()
                );
                Set(
                    varGuardianMiddleName,
                    Blank()
                );
                Set(
                    varGuardianLastName,
                    Blank()
                );
                Set(
                    VarNewPatient,
                    true
                );
                Set(
                    VarReturningPatient,
                    false
                );
                Set(
                    VarConfirmationScreen,
                    true
                );
                Set(
                    VarPatientProfileMode,
                    "New"
                );
                Set(
                    VarPatientAppoinmentMode,
                    "New"
                );
                Set(
                    gblSelectedPatient,
                    Blank()
                );
                Set(
                    gblSelectedAppointmentPatient,
                    Blank()
                );
                Set(
                    existingPaymentInfo,
                    Blank()
                );
                ResetForm(FrmPatientProfile);
                ResetForm(FrmPayment);
                Reset([@CmbSiteLocation]);
                Reset([@CmbServiceType]);
                Reset([@CmbService]);
                Reset([@CmbSubService]);
                Set(
                    VarConfirmationScreen,
                    true
                );
                Navigate(ScnLocation);
                ResetForm(FrmPatientProfilePayment);
            PressedBorderColor: =
            PressedColor: =RGBA(66, 82, 110, 1)
            PressedFill: =
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =16
            Text: ="Create New Appointment"
            Width: =353
            X: =337
            Y: =342
            ZIndex: =4

        BtnUpcomingAppointment As button:
            BorderColor: =VarTheme.PrimaryColor
            BorderStyle: =BorderStyle.None
            BorderThickness: =1
            Color: =VarTheme.PrimaryColor
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            DisabledFill: =RGBA(0,0,0,0)
            Fill: =RGBA(0, 0, 0, 0)
            Font: =VarTheme.Font
            Height: =41
            HoverBorderColor: =VarTheme.PrimaryColor
            HoverColor: =VarTheme.PrimaryColor
            HoverFill: =
            OnSelect: |
                =UpdateContext(
                    {
                        locupcomingappointment: Text(
                            First(
                                SortByColumns(
                                    Filter(
                                        'Appointments (EMR)',
                                        ((IsBlank(LocationComponentHome.SelectedLocationID) || IsEmpty(LocationComponentHome.SelectedLocationID) || Location.Location = GUID(LocationComponentHome.SelectedLocationID)) && 'Appointment Date Time' >= DateAdd(
                                            Today(),
                                            -TimeZoneOffset(),
                                            TimeUnit.Minutes
                                        ))
                                    ),
                                    "smvs_appointmentdatetime",
                                    SortOrder.Ascending
                                )
                            ).'Appointment Date Time',
                            DateTimeFormat.ShortDate
                        )
                    }
                );
                UpdateContext({locActiveTab: 'Appointment Status'.Booked});
            PressedBorderColor: =
            PressedColor: =RGBA(66, 82, 110, 1)
            PressedFill: =RGBA(0,0,0,0)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =14
            Text: =""
            Width: =261
            X: =537
            Y: =226
            ZIndex: =6

